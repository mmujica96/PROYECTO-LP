Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    ASYN
    AWAY
    BREAK
    CONTINUE
    ELSE
    FOR
    FROM
    IF
    LLLAV
    PUNTO
    PUNTO_COMA
    RCOM
    RETURN
    RLLAV
    STATIC
    WHILE

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> asignacion
Rule 2     cuerpo -> operaciones
Rule 3     cuerpo -> comparaciones
Rule 4     cuerpo -> definir_funcion
Rule 5     cuerpo -> print
Rule 6     cuerpo -> library_call
Rule 7     asignacion -> LET ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH
Rule 8     asignacion -> LET ID EQUAL VEC MACRO LCORCH tupla_valores RCORCH
Rule 9     asignacion -> LET ID EQUAL VEC TURBO_FISH NEW LPAREN RPAREN
Rule 10    asignacion -> LET ID EQUAL VEC MACRO LCORCH RCORCH
Rule 11    asignacion -> LET ID EQUAL valor
Rule 12    asignacion -> LET MUT ID EQUAL valor
Rule 13    asignacion -> CONST ID EQUAL valor
Rule 14    asignacion -> LET ID DOUBLE_POINT TIPO_INT EQUAL NUMBER
Rule 15    asignacion -> LET ID DOUBLE_POINT TIPO_CHAR EQUAL CHAR
Rule 16    asignacion -> LET ID DOUBLE_POINT TIPO_STRING EQUAL STRING
Rule 17    asignacion -> LET MUT ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN
Rule 18    asignacion -> LET ID DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion
Rule 19    asignacion -> LET ID EQUAL tupla_declaracion
Rule 20    tupla_asignacion -> LPAREN tupla_lista_de_datos RPAREN
Rule 21    tupla_declaracion -> LPAREN tupla_valores RPAREN
Rule 22    tupla_lista_de_datos -> tipo_de_dato
Rule 23    tupla_lista_de_datos -> tipo_de_dato COMA tupla_lista_de_datos
Rule 24    tupla_valores -> valor
Rule 25    tupla_valores -> valor COMA tupla_valores
Rule 26    definir_funcion -> funcion_main
Rule 27    definir_funcion -> funcion
Rule 28    funcion_main -> FN MAIN LPAREN RPAREN
Rule 29    funcion -> FN ID LPAREN RPAREN
Rule 30    funcion -> FN ID LPAREN lista_parametros RPAREN
Rule 31    lista_parametros -> ID DOUBLE_POINT tipo_de_dato
Rule 32    lista_parametros -> ID DOUBLE_POINT tipo_de_dato COMA lista_parametros
Rule 33    operaciones -> suma
Rule 34    operaciones -> resta
Rule 35    operaciones -> multiplicacion
Rule 36    operaciones -> division
Rule 37    suma -> valor_numerico PLUS valor_numerico
Rule 38    suma -> suma PLUS valor_numerico
Rule 39    resta -> valor_numerico MINUS valor_numerico
Rule 40    resta -> resta MINUS valor_numerico
Rule 41    multiplicacion -> valor_numerico TIMES valor_numerico
Rule 42    multiplicacion -> multiplicacion TIMES valor_numerico
Rule 43    division -> valor_numerico DIVIDE valor_numerico
Rule 44    comparaciones -> menor
Rule 45    comparaciones -> menor_igual
Rule 46    comparaciones -> mayor
Rule 47    comparaciones -> mayor_igual
Rule 48    comparaciones -> igual
Rule 49    menor -> valor_numerico LESS valor_numerico
Rule 50    menor_igual -> valor_numerico LESS EQUAL valor_numerico
Rule 51    mayor -> valor_numerico GREAT valor_numerico
Rule 52    mayor_igual -> valor_numerico GREAT EQUAL valor_numerico
Rule 53    igual -> valor_numerico EQUAL EQUAL valor_numerico
Rule 54    tipo_de_dato -> TIPO_STRING
Rule 55    tipo_de_dato -> TIPO_BOOL
Rule 56    tipo_de_dato -> TIPO_CHAR
Rule 57    tipo_de_dato -> TIPO_INT
Rule 58    valor -> valor_numerico
Rule 59    valor -> STRING
Rule 60    valor -> CHAR
Rule 61    valor -> BOOL
Rule 62    valor_numerico -> FLOAT
Rule 63    valor_numerico -> NUMBER
Rule 64    print -> PRINTLN MACRO LPAREN valor RPAREN
Rule 65    print -> PRINTLN LPAREN NUMBER RPAREN
Rule 66    library_call -> USE library_path
Rule 67    library_path -> ID
Rule 68    library_path -> ID TURBO_FISH library_path

Terminals, with rules where they appear

AS                   : 
ASYN                 : 
AWAY                 : 
BOOL                 : 61
BREAK                : 
CHAR                 : 15 60
COMA                 : 23 25 32
CONST                : 13
CONTINUE             : 
DIVIDE               : 43
DOUBLE_POINT         : 7 14 15 16 18 31 32
ELSE                 : 
EQUAL                : 7 8 9 10 11 12 13 14 15 16 17 18 19 50 52 53 53
FLOAT                : 62
FN                   : 28 29 30
FOR                  : 
FROM                 : 
GREAT                : 7 51 52
ID                   : 7 8 9 10 11 12 13 14 15 16 17 18 19 29 30 31 32 67 68
IF                   : 
LCORCH               : 7 8 10
LESS                 : 7 49 50
LET                  : 7 8 9 10 11 12 14 15 16 17 18 19
LLLAV                : 
LPAREN               : 9 17 20 21 28 29 30 64 65
MACRO                : 7 8 10 64
MAIN                 : 28
MINUS                : 39 40
MUT                  : 12 17
NEW                  : 9 17
NUMBER               : 14 63 65
PLUS                 : 37 38
PRINTLN              : 64 65
PUNTO                : 
PUNTO_COMA           : 
RCOM                 : 
RCORCH               : 7 8 10
RETURN               : 
RLLAV                : 
RPAREN               : 9 17 20 21 28 29 30 64 65
STATIC               : 
STRING               : 16 59
TIMES                : 41 42
TIPO_BOOL            : 55
TIPO_CHAR            : 15 56
TIPO_INT             : 14 57
TIPO_STRING          : 16 54
TURBO_FISH           : 9 17 68
USE                  : 66
VEC                  : 7 8 9 10
VEC_OBJ              : 7
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 1
comparaciones        : 3
cuerpo               : 0
definir_funcion      : 4
division             : 36
funcion              : 27
funcion_main         : 26
igual                : 48
library_call         : 6
library_path         : 66 68
lista_parametros     : 30 32
mayor                : 46
mayor_igual          : 47
menor                : 44
menor_igual          : 45
multiplicacion       : 35 42
operaciones          : 2
print                : 5
resta                : 34 40
suma                 : 33 38
tipo_de_dato         : 7 17 22 23 31 32
tupla_asignacion     : 18
tupla_declaracion    : 18 19
tupla_lista_de_datos : 20 23
tupla_valores        : 7 8 21 25
valor                : 11 12 13 24 25 64
valor_numerico       : 37 37 38 39 39 40 41 41 42 43 43 49 49 50 50 51 51 52 52 53 53 58

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . operaciones
    (3) cuerpo -> . comparaciones
    (4) cuerpo -> . definir_funcion
    (5) cuerpo -> . print
    (6) cuerpo -> . library_call
    (7) asignacion -> . LET ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (8) asignacion -> . LET ID EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (9) asignacion -> . LET ID EQUAL VEC TURBO_FISH NEW LPAREN RPAREN
    (10) asignacion -> . LET ID EQUAL VEC MACRO LCORCH RCORCH
    (11) asignacion -> . LET ID EQUAL valor
    (12) asignacion -> . LET MUT ID EQUAL valor
    (13) asignacion -> . CONST ID EQUAL valor
    (14) asignacion -> . LET ID DOUBLE_POINT TIPO_INT EQUAL NUMBER
    (15) asignacion -> . LET ID DOUBLE_POINT TIPO_CHAR EQUAL CHAR
    (16) asignacion -> . LET ID DOUBLE_POINT TIPO_STRING EQUAL STRING
    (17) asignacion -> . LET MUT ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN
    (18) asignacion -> . LET ID DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion
    (19) asignacion -> . LET ID EQUAL tupla_declaracion
    (33) operaciones -> . suma
    (34) operaciones -> . resta
    (35) operaciones -> . multiplicacion
    (36) operaciones -> . division
    (44) comparaciones -> . menor
    (45) comparaciones -> . menor_igual
    (46) comparaciones -> . mayor
    (47) comparaciones -> . mayor_igual
    (48) comparaciones -> . igual
    (26) definir_funcion -> . funcion_main
    (27) definir_funcion -> . funcion
    (64) print -> . PRINTLN MACRO LPAREN valor RPAREN
    (65) print -> . PRINTLN LPAREN NUMBER RPAREN
    (66) library_call -> . USE library_path
    (37) suma -> . valor_numerico PLUS valor_numerico
    (38) suma -> . suma PLUS valor_numerico
    (39) resta -> . valor_numerico MINUS valor_numerico
    (40) resta -> . resta MINUS valor_numerico
    (41) multiplicacion -> . valor_numerico TIMES valor_numerico
    (42) multiplicacion -> . multiplicacion TIMES valor_numerico
    (43) division -> . valor_numerico DIVIDE valor_numerico
    (49) menor -> . valor_numerico LESS valor_numerico
    (50) menor_igual -> . valor_numerico LESS EQUAL valor_numerico
    (51) mayor -> . valor_numerico GREAT valor_numerico
    (52) mayor_igual -> . valor_numerico GREAT EQUAL valor_numerico
    (53) igual -> . valor_numerico EQUAL EQUAL valor_numerico
    (28) funcion_main -> . FN MAIN LPAREN RPAREN
    (29) funcion -> . FN ID LPAREN RPAREN
    (30) funcion -> . FN ID LPAREN lista_parametros RPAREN
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    LET             shift and go to state 8
    CONST           shift and go to state 9
    PRINTLN         shift and go to state 22
    USE             shift and go to state 23
    FN              shift and go to state 25
    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    cuerpo                         shift and go to state 1
    asignacion                     shift and go to state 2
    operaciones                    shift and go to state 3
    comparaciones                  shift and go to state 4
    definir_funcion                shift and go to state 5
    print                          shift and go to state 6
    library_call                   shift and go to state 7
    suma                           shift and go to state 11
    resta                          shift and go to state 12
    multiplicacion                 shift and go to state 13
    division                       shift and go to state 14
    menor                          shift and go to state 15
    menor_igual                    shift and go to state 16
    mayor                          shift and go to state 17
    mayor_igual                    shift and go to state 18
    igual                          shift and go to state 19
    funcion_main                   shift and go to state 20
    funcion                        shift and go to state 21
    valor_numerico                 shift and go to state 24

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> asignacion .

    $end            reduce using rule 1 (cuerpo -> asignacion .)


state 3

    (2) cuerpo -> operaciones .

    $end            reduce using rule 2 (cuerpo -> operaciones .)


state 4

    (3) cuerpo -> comparaciones .

    $end            reduce using rule 3 (cuerpo -> comparaciones .)


state 5

    (4) cuerpo -> definir_funcion .

    $end            reduce using rule 4 (cuerpo -> definir_funcion .)


state 6

    (5) cuerpo -> print .

    $end            reduce using rule 5 (cuerpo -> print .)


state 7

    (6) cuerpo -> library_call .

    $end            reduce using rule 6 (cuerpo -> library_call .)


state 8

    (7) asignacion -> LET . ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (8) asignacion -> LET . ID EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (9) asignacion -> LET . ID EQUAL VEC TURBO_FISH NEW LPAREN RPAREN
    (10) asignacion -> LET . ID EQUAL VEC MACRO LCORCH RCORCH
    (11) asignacion -> LET . ID EQUAL valor
    (12) asignacion -> LET . MUT ID EQUAL valor
    (14) asignacion -> LET . ID DOUBLE_POINT TIPO_INT EQUAL NUMBER
    (15) asignacion -> LET . ID DOUBLE_POINT TIPO_CHAR EQUAL CHAR
    (16) asignacion -> LET . ID DOUBLE_POINT TIPO_STRING EQUAL STRING
    (17) asignacion -> LET . MUT ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN
    (18) asignacion -> LET . ID DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion
    (19) asignacion -> LET . ID EQUAL tupla_declaracion

    ID              shift and go to state 27
    MUT             shift and go to state 28


state 9

    (13) asignacion -> CONST . ID EQUAL valor

    ID              shift and go to state 29


state 10

    (63) valor_numerico -> NUMBER .

    PLUS            reduce using rule 63 (valor_numerico -> NUMBER .)
    MINUS           reduce using rule 63 (valor_numerico -> NUMBER .)
    TIMES           reduce using rule 63 (valor_numerico -> NUMBER .)
    DIVIDE          reduce using rule 63 (valor_numerico -> NUMBER .)
    LESS            reduce using rule 63 (valor_numerico -> NUMBER .)
    GREAT           reduce using rule 63 (valor_numerico -> NUMBER .)
    EQUAL           reduce using rule 63 (valor_numerico -> NUMBER .)
    $end            reduce using rule 63 (valor_numerico -> NUMBER .)
    RPAREN          reduce using rule 63 (valor_numerico -> NUMBER .)
    COMA            reduce using rule 63 (valor_numerico -> NUMBER .)
    RCORCH          reduce using rule 63 (valor_numerico -> NUMBER .)


state 11

    (33) operaciones -> suma .
    (38) suma -> suma . PLUS valor_numerico

    $end            reduce using rule 33 (operaciones -> suma .)
    PLUS            shift and go to state 30


state 12

    (34) operaciones -> resta .
    (40) resta -> resta . MINUS valor_numerico

    $end            reduce using rule 34 (operaciones -> resta .)
    MINUS           shift and go to state 31


state 13

    (35) operaciones -> multiplicacion .
    (42) multiplicacion -> multiplicacion . TIMES valor_numerico

    $end            reduce using rule 35 (operaciones -> multiplicacion .)
    TIMES           shift and go to state 32


state 14

    (36) operaciones -> division .

    $end            reduce using rule 36 (operaciones -> division .)


state 15

    (44) comparaciones -> menor .

    $end            reduce using rule 44 (comparaciones -> menor .)


state 16

    (45) comparaciones -> menor_igual .

    $end            reduce using rule 45 (comparaciones -> menor_igual .)


state 17

    (46) comparaciones -> mayor .

    $end            reduce using rule 46 (comparaciones -> mayor .)


state 18

    (47) comparaciones -> mayor_igual .

    $end            reduce using rule 47 (comparaciones -> mayor_igual .)


state 19

    (48) comparaciones -> igual .

    $end            reduce using rule 48 (comparaciones -> igual .)


state 20

    (26) definir_funcion -> funcion_main .

    $end            reduce using rule 26 (definir_funcion -> funcion_main .)


state 21

    (27) definir_funcion -> funcion .

    $end            reduce using rule 27 (definir_funcion -> funcion .)


state 22

    (64) print -> PRINTLN . MACRO LPAREN valor RPAREN
    (65) print -> PRINTLN . LPAREN NUMBER RPAREN

    MACRO           shift and go to state 33
    LPAREN          shift and go to state 34


state 23

    (66) library_call -> USE . library_path
    (67) library_path -> . ID
    (68) library_path -> . ID TURBO_FISH library_path

    ID              shift and go to state 36

    library_path                   shift and go to state 35

state 24

    (37) suma -> valor_numerico . PLUS valor_numerico
    (39) resta -> valor_numerico . MINUS valor_numerico
    (41) multiplicacion -> valor_numerico . TIMES valor_numerico
    (43) division -> valor_numerico . DIVIDE valor_numerico
    (49) menor -> valor_numerico . LESS valor_numerico
    (50) menor_igual -> valor_numerico . LESS EQUAL valor_numerico
    (51) mayor -> valor_numerico . GREAT valor_numerico
    (52) mayor_igual -> valor_numerico . GREAT EQUAL valor_numerico
    (53) igual -> valor_numerico . EQUAL EQUAL valor_numerico

    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    LESS            shift and go to state 41
    GREAT           shift and go to state 43
    EQUAL           shift and go to state 42


state 25

    (28) funcion_main -> FN . MAIN LPAREN RPAREN
    (29) funcion -> FN . ID LPAREN RPAREN
    (30) funcion -> FN . ID LPAREN lista_parametros RPAREN

    MAIN            shift and go to state 44
    ID              shift and go to state 45


state 26

    (62) valor_numerico -> FLOAT .

    PLUS            reduce using rule 62 (valor_numerico -> FLOAT .)
    MINUS           reduce using rule 62 (valor_numerico -> FLOAT .)
    TIMES           reduce using rule 62 (valor_numerico -> FLOAT .)
    DIVIDE          reduce using rule 62 (valor_numerico -> FLOAT .)
    LESS            reduce using rule 62 (valor_numerico -> FLOAT .)
    GREAT           reduce using rule 62 (valor_numerico -> FLOAT .)
    EQUAL           reduce using rule 62 (valor_numerico -> FLOAT .)
    $end            reduce using rule 62 (valor_numerico -> FLOAT .)
    RPAREN          reduce using rule 62 (valor_numerico -> FLOAT .)
    COMA            reduce using rule 62 (valor_numerico -> FLOAT .)
    RCORCH          reduce using rule 62 (valor_numerico -> FLOAT .)


state 27

    (7) asignacion -> LET ID . DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (8) asignacion -> LET ID . EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (9) asignacion -> LET ID . EQUAL VEC TURBO_FISH NEW LPAREN RPAREN
    (10) asignacion -> LET ID . EQUAL VEC MACRO LCORCH RCORCH
    (11) asignacion -> LET ID . EQUAL valor
    (14) asignacion -> LET ID . DOUBLE_POINT TIPO_INT EQUAL NUMBER
    (15) asignacion -> LET ID . DOUBLE_POINT TIPO_CHAR EQUAL CHAR
    (16) asignacion -> LET ID . DOUBLE_POINT TIPO_STRING EQUAL STRING
    (18) asignacion -> LET ID . DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion
    (19) asignacion -> LET ID . EQUAL tupla_declaracion

    DOUBLE_POINT    shift and go to state 46
    EQUAL           shift and go to state 47


state 28

    (12) asignacion -> LET MUT . ID EQUAL valor
    (17) asignacion -> LET MUT . ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN

    ID              shift and go to state 48


state 29

    (13) asignacion -> CONST ID . EQUAL valor

    EQUAL           shift and go to state 49


state 30

    (38) suma -> suma PLUS . valor_numerico
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor_numerico                 shift and go to state 50

state 31

    (40) resta -> resta MINUS . valor_numerico
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor_numerico                 shift and go to state 51

state 32

    (42) multiplicacion -> multiplicacion TIMES . valor_numerico
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor_numerico                 shift and go to state 52

state 33

    (64) print -> PRINTLN MACRO . LPAREN valor RPAREN

    LPAREN          shift and go to state 53


state 34

    (65) print -> PRINTLN LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 54


state 35

    (66) library_call -> USE library_path .

    $end            reduce using rule 66 (library_call -> USE library_path .)


state 36

    (67) library_path -> ID .
    (68) library_path -> ID . TURBO_FISH library_path

    $end            reduce using rule 67 (library_path -> ID .)
    TURBO_FISH      shift and go to state 55


state 37

    (37) suma -> valor_numerico PLUS . valor_numerico
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor_numerico                 shift and go to state 56

state 38

    (39) resta -> valor_numerico MINUS . valor_numerico
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor_numerico                 shift and go to state 57

state 39

    (41) multiplicacion -> valor_numerico TIMES . valor_numerico
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor_numerico                 shift and go to state 58

state 40

    (43) division -> valor_numerico DIVIDE . valor_numerico
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor_numerico                 shift and go to state 59

state 41

    (49) menor -> valor_numerico LESS . valor_numerico
    (50) menor_igual -> valor_numerico LESS . EQUAL valor_numerico
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    EQUAL           shift and go to state 61
    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor_numerico                 shift and go to state 60

state 42

    (53) igual -> valor_numerico EQUAL . EQUAL valor_numerico

    EQUAL           shift and go to state 62


state 43

    (51) mayor -> valor_numerico GREAT . valor_numerico
    (52) mayor_igual -> valor_numerico GREAT . EQUAL valor_numerico
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    EQUAL           shift and go to state 64
    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor_numerico                 shift and go to state 63

state 44

    (28) funcion_main -> FN MAIN . LPAREN RPAREN

    LPAREN          shift and go to state 65


state 45

    (29) funcion -> FN ID . LPAREN RPAREN
    (30) funcion -> FN ID . LPAREN lista_parametros RPAREN

    LPAREN          shift and go to state 66


state 46

    (7) asignacion -> LET ID DOUBLE_POINT . VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (14) asignacion -> LET ID DOUBLE_POINT . TIPO_INT EQUAL NUMBER
    (15) asignacion -> LET ID DOUBLE_POINT . TIPO_CHAR EQUAL CHAR
    (16) asignacion -> LET ID DOUBLE_POINT . TIPO_STRING EQUAL STRING
    (18) asignacion -> LET ID DOUBLE_POINT . tupla_asignacion EQUAL tupla_declaracion
    (20) tupla_asignacion -> . LPAREN tupla_lista_de_datos RPAREN

    VEC_OBJ         shift and go to state 67
    TIPO_INT        shift and go to state 68
    TIPO_CHAR       shift and go to state 69
    TIPO_STRING     shift and go to state 70
    LPAREN          shift and go to state 72

    tupla_asignacion               shift and go to state 71

state 47

    (8) asignacion -> LET ID EQUAL . VEC MACRO LCORCH tupla_valores RCORCH
    (9) asignacion -> LET ID EQUAL . VEC TURBO_FISH NEW LPAREN RPAREN
    (10) asignacion -> LET ID EQUAL . VEC MACRO LCORCH RCORCH
    (11) asignacion -> LET ID EQUAL . valor
    (19) asignacion -> LET ID EQUAL . tupla_declaracion
    (58) valor -> . valor_numerico
    (59) valor -> . STRING
    (60) valor -> . CHAR
    (61) valor -> . BOOL
    (21) tupla_declaracion -> . LPAREN tupla_valores RPAREN
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    VEC             shift and go to state 73
    STRING          shift and go to state 78
    CHAR            shift and go to state 79
    BOOL            shift and go to state 80
    LPAREN          shift and go to state 74
    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor                          shift and go to state 75
    tupla_declaracion              shift and go to state 76
    valor_numerico                 shift and go to state 77

state 48

    (12) asignacion -> LET MUT ID . EQUAL valor
    (17) asignacion -> LET MUT ID . EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN

    EQUAL           shift and go to state 81


state 49

    (13) asignacion -> CONST ID EQUAL . valor
    (58) valor -> . valor_numerico
    (59) valor -> . STRING
    (60) valor -> . CHAR
    (61) valor -> . BOOL
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    STRING          shift and go to state 78
    CHAR            shift and go to state 79
    BOOL            shift and go to state 80
    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor                          shift and go to state 82
    valor_numerico                 shift and go to state 77

state 50

    (38) suma -> suma PLUS valor_numerico .

    PLUS            reduce using rule 38 (suma -> suma PLUS valor_numerico .)
    $end            reduce using rule 38 (suma -> suma PLUS valor_numerico .)


state 51

    (40) resta -> resta MINUS valor_numerico .

    MINUS           reduce using rule 40 (resta -> resta MINUS valor_numerico .)
    $end            reduce using rule 40 (resta -> resta MINUS valor_numerico .)


state 52

    (42) multiplicacion -> multiplicacion TIMES valor_numerico .

    TIMES           reduce using rule 42 (multiplicacion -> multiplicacion TIMES valor_numerico .)
    $end            reduce using rule 42 (multiplicacion -> multiplicacion TIMES valor_numerico .)


state 53

    (64) print -> PRINTLN MACRO LPAREN . valor RPAREN
    (58) valor -> . valor_numerico
    (59) valor -> . STRING
    (60) valor -> . CHAR
    (61) valor -> . BOOL
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    STRING          shift and go to state 78
    CHAR            shift and go to state 79
    BOOL            shift and go to state 80
    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor                          shift and go to state 83
    valor_numerico                 shift and go to state 77

state 54

    (65) print -> PRINTLN LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 84


state 55

    (68) library_path -> ID TURBO_FISH . library_path
    (67) library_path -> . ID
    (68) library_path -> . ID TURBO_FISH library_path

    ID              shift and go to state 36

    library_path                   shift and go to state 85

state 56

    (37) suma -> valor_numerico PLUS valor_numerico .

    PLUS            reduce using rule 37 (suma -> valor_numerico PLUS valor_numerico .)
    $end            reduce using rule 37 (suma -> valor_numerico PLUS valor_numerico .)


state 57

    (39) resta -> valor_numerico MINUS valor_numerico .

    MINUS           reduce using rule 39 (resta -> valor_numerico MINUS valor_numerico .)
    $end            reduce using rule 39 (resta -> valor_numerico MINUS valor_numerico .)


state 58

    (41) multiplicacion -> valor_numerico TIMES valor_numerico .

    TIMES           reduce using rule 41 (multiplicacion -> valor_numerico TIMES valor_numerico .)
    $end            reduce using rule 41 (multiplicacion -> valor_numerico TIMES valor_numerico .)


state 59

    (43) division -> valor_numerico DIVIDE valor_numerico .

    $end            reduce using rule 43 (division -> valor_numerico DIVIDE valor_numerico .)


state 60

    (49) menor -> valor_numerico LESS valor_numerico .

    $end            reduce using rule 49 (menor -> valor_numerico LESS valor_numerico .)


state 61

    (50) menor_igual -> valor_numerico LESS EQUAL . valor_numerico
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor_numerico                 shift and go to state 86

state 62

    (53) igual -> valor_numerico EQUAL EQUAL . valor_numerico
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor_numerico                 shift and go to state 87

state 63

    (51) mayor -> valor_numerico GREAT valor_numerico .

    $end            reduce using rule 51 (mayor -> valor_numerico GREAT valor_numerico .)


state 64

    (52) mayor_igual -> valor_numerico GREAT EQUAL . valor_numerico
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor_numerico                 shift and go to state 88

state 65

    (28) funcion_main -> FN MAIN LPAREN . RPAREN

    RPAREN          shift and go to state 89


state 66

    (29) funcion -> FN ID LPAREN . RPAREN
    (30) funcion -> FN ID LPAREN . lista_parametros RPAREN
    (31) lista_parametros -> . ID DOUBLE_POINT tipo_de_dato
    (32) lista_parametros -> . ID DOUBLE_POINT tipo_de_dato COMA lista_parametros

    RPAREN          shift and go to state 91
    ID              shift and go to state 90

    lista_parametros               shift and go to state 92

state 67

    (7) asignacion -> LET ID DOUBLE_POINT VEC_OBJ . LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH

    LESS            shift and go to state 93


state 68

    (14) asignacion -> LET ID DOUBLE_POINT TIPO_INT . EQUAL NUMBER

    EQUAL           shift and go to state 94


state 69

    (15) asignacion -> LET ID DOUBLE_POINT TIPO_CHAR . EQUAL CHAR

    EQUAL           shift and go to state 95


state 70

    (16) asignacion -> LET ID DOUBLE_POINT TIPO_STRING . EQUAL STRING

    EQUAL           shift and go to state 96


state 71

    (18) asignacion -> LET ID DOUBLE_POINT tupla_asignacion . EQUAL tupla_declaracion

    EQUAL           shift and go to state 97


state 72

    (20) tupla_asignacion -> LPAREN . tupla_lista_de_datos RPAREN
    (22) tupla_lista_de_datos -> . tipo_de_dato
    (23) tupla_lista_de_datos -> . tipo_de_dato COMA tupla_lista_de_datos
    (54) tipo_de_dato -> . TIPO_STRING
    (55) tipo_de_dato -> . TIPO_BOOL
    (56) tipo_de_dato -> . TIPO_CHAR
    (57) tipo_de_dato -> . TIPO_INT

    TIPO_STRING     shift and go to state 100
    TIPO_BOOL       shift and go to state 101
    TIPO_CHAR       shift and go to state 102
    TIPO_INT        shift and go to state 103

    tupla_lista_de_datos           shift and go to state 98
    tipo_de_dato                   shift and go to state 99

state 73

    (8) asignacion -> LET ID EQUAL VEC . MACRO LCORCH tupla_valores RCORCH
    (9) asignacion -> LET ID EQUAL VEC . TURBO_FISH NEW LPAREN RPAREN
    (10) asignacion -> LET ID EQUAL VEC . MACRO LCORCH RCORCH

    MACRO           shift and go to state 104
    TURBO_FISH      shift and go to state 105


state 74

    (21) tupla_declaracion -> LPAREN . tupla_valores RPAREN
    (24) tupla_valores -> . valor
    (25) tupla_valores -> . valor COMA tupla_valores
    (58) valor -> . valor_numerico
    (59) valor -> . STRING
    (60) valor -> . CHAR
    (61) valor -> . BOOL
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    STRING          shift and go to state 78
    CHAR            shift and go to state 79
    BOOL            shift and go to state 80
    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    tupla_valores                  shift and go to state 106
    valor                          shift and go to state 107
    valor_numerico                 shift and go to state 77

state 75

    (11) asignacion -> LET ID EQUAL valor .

    $end            reduce using rule 11 (asignacion -> LET ID EQUAL valor .)


state 76

    (19) asignacion -> LET ID EQUAL tupla_declaracion .

    $end            reduce using rule 19 (asignacion -> LET ID EQUAL tupla_declaracion .)


state 77

    (58) valor -> valor_numerico .

    $end            reduce using rule 58 (valor -> valor_numerico .)
    RPAREN          reduce using rule 58 (valor -> valor_numerico .)
    COMA            reduce using rule 58 (valor -> valor_numerico .)
    RCORCH          reduce using rule 58 (valor -> valor_numerico .)


state 78

    (59) valor -> STRING .

    $end            reduce using rule 59 (valor -> STRING .)
    RPAREN          reduce using rule 59 (valor -> STRING .)
    COMA            reduce using rule 59 (valor -> STRING .)
    RCORCH          reduce using rule 59 (valor -> STRING .)


state 79

    (60) valor -> CHAR .

    $end            reduce using rule 60 (valor -> CHAR .)
    RPAREN          reduce using rule 60 (valor -> CHAR .)
    COMA            reduce using rule 60 (valor -> CHAR .)
    RCORCH          reduce using rule 60 (valor -> CHAR .)


state 80

    (61) valor -> BOOL .

    $end            reduce using rule 61 (valor -> BOOL .)
    RPAREN          reduce using rule 61 (valor -> BOOL .)
    COMA            reduce using rule 61 (valor -> BOOL .)
    RCORCH          reduce using rule 61 (valor -> BOOL .)


state 81

    (12) asignacion -> LET MUT ID EQUAL . valor
    (17) asignacion -> LET MUT ID EQUAL . tipo_de_dato TURBO_FISH NEW LPAREN RPAREN
    (58) valor -> . valor_numerico
    (59) valor -> . STRING
    (60) valor -> . CHAR
    (61) valor -> . BOOL
    (54) tipo_de_dato -> . TIPO_STRING
    (55) tipo_de_dato -> . TIPO_BOOL
    (56) tipo_de_dato -> . TIPO_CHAR
    (57) tipo_de_dato -> . TIPO_INT
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    STRING          shift and go to state 78
    CHAR            shift and go to state 79
    BOOL            shift and go to state 80
    TIPO_STRING     shift and go to state 100
    TIPO_BOOL       shift and go to state 101
    TIPO_CHAR       shift and go to state 102
    TIPO_INT        shift and go to state 103
    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor                          shift and go to state 108
    tipo_de_dato                   shift and go to state 109
    valor_numerico                 shift and go to state 77

state 82

    (13) asignacion -> CONST ID EQUAL valor .

    $end            reduce using rule 13 (asignacion -> CONST ID EQUAL valor .)


state 83

    (64) print -> PRINTLN MACRO LPAREN valor . RPAREN

    RPAREN          shift and go to state 110


state 84

    (65) print -> PRINTLN LPAREN NUMBER RPAREN .

    $end            reduce using rule 65 (print -> PRINTLN LPAREN NUMBER RPAREN .)


state 85

    (68) library_path -> ID TURBO_FISH library_path .

    $end            reduce using rule 68 (library_path -> ID TURBO_FISH library_path .)


state 86

    (50) menor_igual -> valor_numerico LESS EQUAL valor_numerico .

    $end            reduce using rule 50 (menor_igual -> valor_numerico LESS EQUAL valor_numerico .)


state 87

    (53) igual -> valor_numerico EQUAL EQUAL valor_numerico .

    $end            reduce using rule 53 (igual -> valor_numerico EQUAL EQUAL valor_numerico .)


state 88

    (52) mayor_igual -> valor_numerico GREAT EQUAL valor_numerico .

    $end            reduce using rule 52 (mayor_igual -> valor_numerico GREAT EQUAL valor_numerico .)


state 89

    (28) funcion_main -> FN MAIN LPAREN RPAREN .

    $end            reduce using rule 28 (funcion_main -> FN MAIN LPAREN RPAREN .)


state 90

    (31) lista_parametros -> ID . DOUBLE_POINT tipo_de_dato
    (32) lista_parametros -> ID . DOUBLE_POINT tipo_de_dato COMA lista_parametros

    DOUBLE_POINT    shift and go to state 111


state 91

    (29) funcion -> FN ID LPAREN RPAREN .

    $end            reduce using rule 29 (funcion -> FN ID LPAREN RPAREN .)


state 92

    (30) funcion -> FN ID LPAREN lista_parametros . RPAREN

    RPAREN          shift and go to state 112


state 93

    (7) asignacion -> LET ID DOUBLE_POINT VEC_OBJ LESS . tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (54) tipo_de_dato -> . TIPO_STRING
    (55) tipo_de_dato -> . TIPO_BOOL
    (56) tipo_de_dato -> . TIPO_CHAR
    (57) tipo_de_dato -> . TIPO_INT

    TIPO_STRING     shift and go to state 100
    TIPO_BOOL       shift and go to state 101
    TIPO_CHAR       shift and go to state 102
    TIPO_INT        shift and go to state 103

    tipo_de_dato                   shift and go to state 113

state 94

    (14) asignacion -> LET ID DOUBLE_POINT TIPO_INT EQUAL . NUMBER

    NUMBER          shift and go to state 114


state 95

    (15) asignacion -> LET ID DOUBLE_POINT TIPO_CHAR EQUAL . CHAR

    CHAR            shift and go to state 115


state 96

    (16) asignacion -> LET ID DOUBLE_POINT TIPO_STRING EQUAL . STRING

    STRING          shift and go to state 116


state 97

    (18) asignacion -> LET ID DOUBLE_POINT tupla_asignacion EQUAL . tupla_declaracion
    (21) tupla_declaracion -> . LPAREN tupla_valores RPAREN

    LPAREN          shift and go to state 74

    tupla_declaracion              shift and go to state 117

state 98

    (20) tupla_asignacion -> LPAREN tupla_lista_de_datos . RPAREN

    RPAREN          shift and go to state 118


state 99

    (22) tupla_lista_de_datos -> tipo_de_dato .
    (23) tupla_lista_de_datos -> tipo_de_dato . COMA tupla_lista_de_datos

    RPAREN          reduce using rule 22 (tupla_lista_de_datos -> tipo_de_dato .)
    COMA            shift and go to state 119


state 100

    (54) tipo_de_dato -> TIPO_STRING .

    COMA            reduce using rule 54 (tipo_de_dato -> TIPO_STRING .)
    RPAREN          reduce using rule 54 (tipo_de_dato -> TIPO_STRING .)
    TURBO_FISH      reduce using rule 54 (tipo_de_dato -> TIPO_STRING .)
    GREAT           reduce using rule 54 (tipo_de_dato -> TIPO_STRING .)


state 101

    (55) tipo_de_dato -> TIPO_BOOL .

    COMA            reduce using rule 55 (tipo_de_dato -> TIPO_BOOL .)
    RPAREN          reduce using rule 55 (tipo_de_dato -> TIPO_BOOL .)
    TURBO_FISH      reduce using rule 55 (tipo_de_dato -> TIPO_BOOL .)
    GREAT           reduce using rule 55 (tipo_de_dato -> TIPO_BOOL .)


state 102

    (56) tipo_de_dato -> TIPO_CHAR .

    COMA            reduce using rule 56 (tipo_de_dato -> TIPO_CHAR .)
    RPAREN          reduce using rule 56 (tipo_de_dato -> TIPO_CHAR .)
    TURBO_FISH      reduce using rule 56 (tipo_de_dato -> TIPO_CHAR .)
    GREAT           reduce using rule 56 (tipo_de_dato -> TIPO_CHAR .)


state 103

    (57) tipo_de_dato -> TIPO_INT .

    COMA            reduce using rule 57 (tipo_de_dato -> TIPO_INT .)
    RPAREN          reduce using rule 57 (tipo_de_dato -> TIPO_INT .)
    TURBO_FISH      reduce using rule 57 (tipo_de_dato -> TIPO_INT .)
    GREAT           reduce using rule 57 (tipo_de_dato -> TIPO_INT .)


state 104

    (8) asignacion -> LET ID EQUAL VEC MACRO . LCORCH tupla_valores RCORCH
    (10) asignacion -> LET ID EQUAL VEC MACRO . LCORCH RCORCH

    LCORCH          shift and go to state 120


state 105

    (9) asignacion -> LET ID EQUAL VEC TURBO_FISH . NEW LPAREN RPAREN

    NEW             shift and go to state 121


state 106

    (21) tupla_declaracion -> LPAREN tupla_valores . RPAREN

    RPAREN          shift and go to state 122


state 107

    (24) tupla_valores -> valor .
    (25) tupla_valores -> valor . COMA tupla_valores

    RPAREN          reduce using rule 24 (tupla_valores -> valor .)
    RCORCH          reduce using rule 24 (tupla_valores -> valor .)
    COMA            shift and go to state 123


state 108

    (12) asignacion -> LET MUT ID EQUAL valor .

    $end            reduce using rule 12 (asignacion -> LET MUT ID EQUAL valor .)


state 109

    (17) asignacion -> LET MUT ID EQUAL tipo_de_dato . TURBO_FISH NEW LPAREN RPAREN

    TURBO_FISH      shift and go to state 124


state 110

    (64) print -> PRINTLN MACRO LPAREN valor RPAREN .

    $end            reduce using rule 64 (print -> PRINTLN MACRO LPAREN valor RPAREN .)


state 111

    (31) lista_parametros -> ID DOUBLE_POINT . tipo_de_dato
    (32) lista_parametros -> ID DOUBLE_POINT . tipo_de_dato COMA lista_parametros
    (54) tipo_de_dato -> . TIPO_STRING
    (55) tipo_de_dato -> . TIPO_BOOL
    (56) tipo_de_dato -> . TIPO_CHAR
    (57) tipo_de_dato -> . TIPO_INT

    TIPO_STRING     shift and go to state 100
    TIPO_BOOL       shift and go to state 101
    TIPO_CHAR       shift and go to state 102
    TIPO_INT        shift and go to state 103

    tipo_de_dato                   shift and go to state 125

state 112

    (30) funcion -> FN ID LPAREN lista_parametros RPAREN .

    $end            reduce using rule 30 (funcion -> FN ID LPAREN lista_parametros RPAREN .)


state 113

    (7) asignacion -> LET ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato . GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH

    GREAT           shift and go to state 126


state 114

    (14) asignacion -> LET ID DOUBLE_POINT TIPO_INT EQUAL NUMBER .

    $end            reduce using rule 14 (asignacion -> LET ID DOUBLE_POINT TIPO_INT EQUAL NUMBER .)


state 115

    (15) asignacion -> LET ID DOUBLE_POINT TIPO_CHAR EQUAL CHAR .

    $end            reduce using rule 15 (asignacion -> LET ID DOUBLE_POINT TIPO_CHAR EQUAL CHAR .)


state 116

    (16) asignacion -> LET ID DOUBLE_POINT TIPO_STRING EQUAL STRING .

    $end            reduce using rule 16 (asignacion -> LET ID DOUBLE_POINT TIPO_STRING EQUAL STRING .)


state 117

    (18) asignacion -> LET ID DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion .

    $end            reduce using rule 18 (asignacion -> LET ID DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion .)


state 118

    (20) tupla_asignacion -> LPAREN tupla_lista_de_datos RPAREN .

    EQUAL           reduce using rule 20 (tupla_asignacion -> LPAREN tupla_lista_de_datos RPAREN .)


state 119

    (23) tupla_lista_de_datos -> tipo_de_dato COMA . tupla_lista_de_datos
    (22) tupla_lista_de_datos -> . tipo_de_dato
    (23) tupla_lista_de_datos -> . tipo_de_dato COMA tupla_lista_de_datos
    (54) tipo_de_dato -> . TIPO_STRING
    (55) tipo_de_dato -> . TIPO_BOOL
    (56) tipo_de_dato -> . TIPO_CHAR
    (57) tipo_de_dato -> . TIPO_INT

    TIPO_STRING     shift and go to state 100
    TIPO_BOOL       shift and go to state 101
    TIPO_CHAR       shift and go to state 102
    TIPO_INT        shift and go to state 103

    tipo_de_dato                   shift and go to state 99
    tupla_lista_de_datos           shift and go to state 127

state 120

    (8) asignacion -> LET ID EQUAL VEC MACRO LCORCH . tupla_valores RCORCH
    (10) asignacion -> LET ID EQUAL VEC MACRO LCORCH . RCORCH
    (24) tupla_valores -> . valor
    (25) tupla_valores -> . valor COMA tupla_valores
    (58) valor -> . valor_numerico
    (59) valor -> . STRING
    (60) valor -> . CHAR
    (61) valor -> . BOOL
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    RCORCH          shift and go to state 129
    STRING          shift and go to state 78
    CHAR            shift and go to state 79
    BOOL            shift and go to state 80
    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    tupla_valores                  shift and go to state 128
    valor                          shift and go to state 107
    valor_numerico                 shift and go to state 77

state 121

    (9) asignacion -> LET ID EQUAL VEC TURBO_FISH NEW . LPAREN RPAREN

    LPAREN          shift and go to state 130


state 122

    (21) tupla_declaracion -> LPAREN tupla_valores RPAREN .

    $end            reduce using rule 21 (tupla_declaracion -> LPAREN tupla_valores RPAREN .)


state 123

    (25) tupla_valores -> valor COMA . tupla_valores
    (24) tupla_valores -> . valor
    (25) tupla_valores -> . valor COMA tupla_valores
    (58) valor -> . valor_numerico
    (59) valor -> . STRING
    (60) valor -> . CHAR
    (61) valor -> . BOOL
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    STRING          shift and go to state 78
    CHAR            shift and go to state 79
    BOOL            shift and go to state 80
    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    valor                          shift and go to state 107
    tupla_valores                  shift and go to state 131
    valor_numerico                 shift and go to state 77

state 124

    (17) asignacion -> LET MUT ID EQUAL tipo_de_dato TURBO_FISH . NEW LPAREN RPAREN

    NEW             shift and go to state 132


state 125

    (31) lista_parametros -> ID DOUBLE_POINT tipo_de_dato .
    (32) lista_parametros -> ID DOUBLE_POINT tipo_de_dato . COMA lista_parametros

    RPAREN          reduce using rule 31 (lista_parametros -> ID DOUBLE_POINT tipo_de_dato .)
    COMA            shift and go to state 133


state 126

    (7) asignacion -> LET ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT . EQUAL VEC MACRO LCORCH tupla_valores RCORCH

    EQUAL           shift and go to state 134


state 127

    (23) tupla_lista_de_datos -> tipo_de_dato COMA tupla_lista_de_datos .

    RPAREN          reduce using rule 23 (tupla_lista_de_datos -> tipo_de_dato COMA tupla_lista_de_datos .)


state 128

    (8) asignacion -> LET ID EQUAL VEC MACRO LCORCH tupla_valores . RCORCH

    RCORCH          shift and go to state 135


state 129

    (10) asignacion -> LET ID EQUAL VEC MACRO LCORCH RCORCH .

    $end            reduce using rule 10 (asignacion -> LET ID EQUAL VEC MACRO LCORCH RCORCH .)


state 130

    (9) asignacion -> LET ID EQUAL VEC TURBO_FISH NEW LPAREN . RPAREN

    RPAREN          shift and go to state 136


state 131

    (25) tupla_valores -> valor COMA tupla_valores .

    RPAREN          reduce using rule 25 (tupla_valores -> valor COMA tupla_valores .)
    RCORCH          reduce using rule 25 (tupla_valores -> valor COMA tupla_valores .)


state 132

    (17) asignacion -> LET MUT ID EQUAL tipo_de_dato TURBO_FISH NEW . LPAREN RPAREN

    LPAREN          shift and go to state 137


state 133

    (32) lista_parametros -> ID DOUBLE_POINT tipo_de_dato COMA . lista_parametros
    (31) lista_parametros -> . ID DOUBLE_POINT tipo_de_dato
    (32) lista_parametros -> . ID DOUBLE_POINT tipo_de_dato COMA lista_parametros

    ID              shift and go to state 90

    lista_parametros               shift and go to state 138

state 134

    (7) asignacion -> LET ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL . VEC MACRO LCORCH tupla_valores RCORCH

    VEC             shift and go to state 139


state 135

    (8) asignacion -> LET ID EQUAL VEC MACRO LCORCH tupla_valores RCORCH .

    $end            reduce using rule 8 (asignacion -> LET ID EQUAL VEC MACRO LCORCH tupla_valores RCORCH .)


state 136

    (9) asignacion -> LET ID EQUAL VEC TURBO_FISH NEW LPAREN RPAREN .

    $end            reduce using rule 9 (asignacion -> LET ID EQUAL VEC TURBO_FISH NEW LPAREN RPAREN .)


state 137

    (17) asignacion -> LET MUT ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN . RPAREN

    RPAREN          shift and go to state 140


state 138

    (32) lista_parametros -> ID DOUBLE_POINT tipo_de_dato COMA lista_parametros .

    RPAREN          reduce using rule 32 (lista_parametros -> ID DOUBLE_POINT tipo_de_dato COMA lista_parametros .)


state 139

    (7) asignacion -> LET ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC . MACRO LCORCH tupla_valores RCORCH

    MACRO           shift and go to state 141


state 140

    (17) asignacion -> LET MUT ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN .

    $end            reduce using rule 17 (asignacion -> LET MUT ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN .)


state 141

    (7) asignacion -> LET ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO . LCORCH tupla_valores RCORCH

    LCORCH          shift and go to state 142


state 142

    (7) asignacion -> LET ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH . tupla_valores RCORCH
    (24) tupla_valores -> . valor
    (25) tupla_valores -> . valor COMA tupla_valores
    (58) valor -> . valor_numerico
    (59) valor -> . STRING
    (60) valor -> . CHAR
    (61) valor -> . BOOL
    (62) valor_numerico -> . FLOAT
    (63) valor_numerico -> . NUMBER

    STRING          shift and go to state 78
    CHAR            shift and go to state 79
    BOOL            shift and go to state 80
    FLOAT           shift and go to state 26
    NUMBER          shift and go to state 10

    tupla_valores                  shift and go to state 143
    valor                          shift and go to state 107
    valor_numerico                 shift and go to state 77

state 143

    (7) asignacion -> LET ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores . RCORCH

    RCORCH          shift and go to state 144


state 144

    (7) asignacion -> LET ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH .

    $end            reduce using rule 7 (asignacion -> LET ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH .)

