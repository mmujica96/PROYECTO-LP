Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    ASYN
    AWAY
    BREAK
    CONTINUE
    ELSE
    FOR
    FROM
    IF
    PUNTO_COMA
    RCOM
    RETURN
    STATIC
    WHILE

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> asignacion
Rule 2     cuerpo -> operaciones
Rule 3     cuerpo -> comparaciones
Rule 4     cuerpo -> definir_funcion
Rule 5     cuerpo -> llamada_a_metodo
Rule 6     cuerpo -> enum
Rule 7     cuerpo -> print
Rule 8     cuerpo -> library_call
Rule 9     booleano -> TRUE
Rule 10    booleano -> FALSE
Rule 11    asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH
Rule 12    asignacion -> declaracion ID EQUAL VEC MACRO LCORCH tupla_valores RCORCH
Rule 13    asignacion -> declaracion ID EQUAL VEC TURBO_FISH NEW LPAREN RPAREN
Rule 14    asignacion -> declaracion ID EQUAL VEC MACRO LCORCH RCORCH
Rule 15    asignacion -> declaracion ID EQUAL valor
Rule 16    asignacion -> declaracion ID DOUBLE_POINT TIPO_INT EQUAL NUMBER
Rule 17    asignacion -> declaracion ID DOUBLE_POINT TIPO_CHAR EQUAL CHAR
Rule 18    asignacion -> declaracion ID DOUBLE_POINT TIPO_STRING EQUAL STRING
Rule 19    asignacion -> declaracion ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN
Rule 20    asignacion -> declaracion DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion
Rule 21    asignacion -> declaracion ID EQUAL tupla_declaracion
Rule 22    tupla_asignacion -> LPAREN tupla_lista_de_datos RPAREN
Rule 23    declaracion -> LET
Rule 24    declaracion -> LET MUT
Rule 25    declaracion -> CONST
Rule 26    tupla_declaracion -> LPAREN tupla_valores RPAREN
Rule 27    tupla_lista_de_datos -> tipo_de_dato
Rule 28    tupla_lista_de_datos -> tipo_de_dato COMA tupla_lista_de_datos
Rule 29    tupla_valores -> valor
Rule 30    tupla_valores -> valor COMA tupla_valores
Rule 31    tipo_de_dato -> TIPO_STRING
Rule 32    tipo_de_dato -> TIPO_BOOL
Rule 33    tipo_de_dato -> TIPO_CHAR
Rule 34    tipo_de_dato -> TIPO_INT
Rule 35    valor -> valor_numerico
Rule 36    valor -> STRING
Rule 37    valor -> CHAR
Rule 38    valor -> BOOL
Rule 39    valor_numerico -> FLOAT
Rule 40    valor_numerico -> NUMBER
Rule 41    operaciones -> suma
Rule 42    operaciones -> resta
Rule 43    operaciones -> multiplicacion
Rule 44    operaciones -> division
Rule 45    suma -> valor_numerico PLUS valor_numerico
Rule 46    suma -> suma PLUS valor_numerico
Rule 47    resta -> valor_numerico MINUS valor_numerico
Rule 48    resta -> resta MINUS valor_numerico
Rule 49    multiplicacion -> valor_numerico TIMES valor_numerico
Rule 50    multiplicacion -> multiplicacion TIMES valor_numerico
Rule 51    division -> valor_numerico DIVIDE valor_numerico
Rule 52    comparaciones -> menor
Rule 53    comparaciones -> menor_igual
Rule 54    comparaciones -> mayor
Rule 55    comparaciones -> mayor_igual
Rule 56    comparaciones -> igual
Rule 57    menor -> valor_numerico LESS valor_numerico
Rule 58    menor_igual -> valor_numerico LESS EQUAL valor_numerico
Rule 59    mayor -> valor_numerico GREAT valor_numerico
Rule 60    mayor_igual -> valor_numerico GREAT EQUAL valor_numerico
Rule 61    igual -> valor_numerico EQUAL EQUAL valor_numerico
Rule 62    definir_funcion -> funcion_main
Rule 63    definir_funcion -> funcion
Rule 64    funcion_main -> FN MAIN LPAREN RPAREN
Rule 65    funcion -> FN ID LPAREN RPAREN
Rule 66    funcion -> FN ID LPAREN lista_parametros RPAREN
Rule 67    lista_parametros -> ID DOUBLE_POINT tipo_de_dato
Rule 68    lista_parametros -> ID DOUBLE_POINT tipo_de_dato COMA lista_parametros
Rule 69    llamada_a_metodo -> ID PUNTO metodo
Rule 70    llamada_a_metodo -> ID PUNTO NUMBER
Rule 71    metodo -> pop_method
Rule 72    metodo -> push_method
Rule 73    pop_method -> POP LPAREN RPAREN
Rule 74    pop_method -> POP LPAREN NUMBER RPAREN
Rule 75    push_method -> PUSH LPAREN RPAREN
Rule 76    push_method -> PUSH LPAREN NUMBER RPAREN
Rule 77    enum -> ENUM ID LLLAV lista_enum RLLAV
Rule 78    lista_enum -> lista_enum_id
Rule 79    lista_enum -> lista_enum_id_tipo
Rule 80    lista_enum -> lista_enum_tipo
Rule 81    lista_enum_id -> ID
Rule 82    lista_enum_id -> ID COMA lista_enum_id
Rule 83    lista_enum_id_tipo -> ID DOUBLE_POINT tipo_de_dato
Rule 84    lista_enum_id_tipo -> ID DOUBLE_POINT tipo_de_dato lista_enum_id_tipo
Rule 85    lista_enum_tipo -> tipo_de_dato
Rule 86    lista_enum_tipo -> tipo_de_dato COMA lista_enum_tipo
Rule 87    operadorLogico -> AND
Rule 88    operadorLogico -> OR
Rule 89    operadorLogico -> NOT
Rule 90    operacionLogica -> valor repite_operacionLogica
Rule 91    repite_operacionLogica -> operadorLogico valor
Rule 92    repite_operacionLogica -> operadorLogico valor repite_operacionLogica
Rule 93    print -> PRINTLN MACRO LPAREN valor RPAREN
Rule 94    print -> PRINTLN LPAREN valor RPAREN
Rule 95    library_call -> USE library_path
Rule 96    library_path -> ID
Rule 97    library_path -> ID TURBO_FISH library_path

Terminals, with rules where they appear

AND                  : 87
AS                   : 
ASYN                 : 
AWAY                 : 
BOOL                 : 38
BREAK                : 
CHAR                 : 17 37
COMA                 : 28 30 68 82 86
CONST                : 25
CONTINUE             : 
DIVIDE               : 51
DOUBLE_POINT         : 11 16 17 18 20 67 68 83 84
ELSE                 : 
ENUM                 : 77
EQUAL                : 11 12 13 14 15 16 17 18 19 20 21 58 60 61 61
FALSE                : 10
FLOAT                : 39
FN                   : 64 65 66
FOR                  : 
FROM                 : 
GREAT                : 11 59 60
ID                   : 11 12 13 14 15 16 17 18 19 21 65 66 67 68 69 70 77 81 82 83 84 96 97
IF                   : 
LCORCH               : 11 12 14
LESS                 : 11 57 58
LET                  : 23 24
LLLAV                : 77
LPAREN               : 13 19 22 26 64 65 66 73 74 75 76 93 94
MACRO                : 11 12 14 93
MAIN                 : 64
MINUS                : 47 48
MUT                  : 24
NEW                  : 13 19
NOT                  : 89
NUMBER               : 16 40 70 74 76
OR                   : 88
PLUS                 : 45 46
POP                  : 73 74
PRINTLN              : 93 94
PUNTO                : 69 70
PUNTO_COMA           : 
PUSH                 : 75 76
RCOM                 : 
RCORCH               : 11 12 14
RETURN               : 
RLLAV                : 77
RPAREN               : 13 19 22 26 64 65 66 73 74 75 76 93 94
STATIC               : 
STRING               : 18 36
TIMES                : 49 50
TIPO_BOOL            : 32
TIPO_CHAR            : 17 33
TIPO_INT             : 16 34
TIPO_STRING          : 18 31
TRUE                 : 9
TURBO_FISH           : 13 19 97
USE                  : 95
VEC                  : 11 12 13 14
VEC_OBJ              : 11
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 1
booleano             : 
comparaciones        : 3
cuerpo               : 0
declaracion          : 11 12 13 14 15 16 17 18 19 20 21
definir_funcion      : 4
division             : 44
enum                 : 6
funcion              : 63
funcion_main         : 62
igual                : 56
library_call         : 8
library_path         : 95 97
lista_enum           : 77
lista_enum_id        : 78 82
lista_enum_id_tipo   : 79 84
lista_enum_tipo      : 80 86
lista_parametros     : 66 68
llamada_a_metodo     : 5
mayor                : 54
mayor_igual          : 55
menor                : 52
menor_igual          : 53
metodo               : 69
multiplicacion       : 43 50
operacionLogica      : 
operaciones          : 2
operadorLogico       : 91 92
pop_method           : 71
print                : 7
push_method          : 72
repite_operacionLogica : 90 92
resta                : 42 48
suma                 : 41 46
tipo_de_dato         : 11 19 27 28 67 68 83 84 85 86
tupla_asignacion     : 20
tupla_declaracion    : 20 21
tupla_lista_de_datos : 22 28
tupla_valores        : 11 12 26 30
valor                : 15 29 30 90 91 92 93 94
valor_numerico       : 35 45 45 46 47 47 48 49 49 50 51 51 57 57 58 58 59 59 60 60 61 61

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . operaciones
    (3) cuerpo -> . comparaciones
    (4) cuerpo -> . definir_funcion
    (5) cuerpo -> . llamada_a_metodo
    (6) cuerpo -> . enum
    (7) cuerpo -> . print
    (8) cuerpo -> . library_call
    (11) asignacion -> . declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (12) asignacion -> . declaracion ID EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (13) asignacion -> . declaracion ID EQUAL VEC TURBO_FISH NEW LPAREN RPAREN
    (14) asignacion -> . declaracion ID EQUAL VEC MACRO LCORCH RCORCH
    (15) asignacion -> . declaracion ID EQUAL valor
    (16) asignacion -> . declaracion ID DOUBLE_POINT TIPO_INT EQUAL NUMBER
    (17) asignacion -> . declaracion ID DOUBLE_POINT TIPO_CHAR EQUAL CHAR
    (18) asignacion -> . declaracion ID DOUBLE_POINT TIPO_STRING EQUAL STRING
    (19) asignacion -> . declaracion ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN
    (20) asignacion -> . declaracion DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion
    (21) asignacion -> . declaracion ID EQUAL tupla_declaracion
    (41) operaciones -> . suma
    (42) operaciones -> . resta
    (43) operaciones -> . multiplicacion
    (44) operaciones -> . division
    (52) comparaciones -> . menor
    (53) comparaciones -> . menor_igual
    (54) comparaciones -> . mayor
    (55) comparaciones -> . mayor_igual
    (56) comparaciones -> . igual
    (62) definir_funcion -> . funcion_main
    (63) definir_funcion -> . funcion
    (69) llamada_a_metodo -> . ID PUNTO metodo
    (70) llamada_a_metodo -> . ID PUNTO NUMBER
    (77) enum -> . ENUM ID LLLAV lista_enum RLLAV
    (93) print -> . PRINTLN MACRO LPAREN valor RPAREN
    (94) print -> . PRINTLN LPAREN valor RPAREN
    (95) library_call -> . USE library_path
    (23) declaracion -> . LET
    (24) declaracion -> . LET MUT
    (25) declaracion -> . CONST
    (45) suma -> . valor_numerico PLUS valor_numerico
    (46) suma -> . suma PLUS valor_numerico
    (47) resta -> . valor_numerico MINUS valor_numerico
    (48) resta -> . resta MINUS valor_numerico
    (49) multiplicacion -> . valor_numerico TIMES valor_numerico
    (50) multiplicacion -> . multiplicacion TIMES valor_numerico
    (51) division -> . valor_numerico DIVIDE valor_numerico
    (57) menor -> . valor_numerico LESS valor_numerico
    (58) menor_igual -> . valor_numerico LESS EQUAL valor_numerico
    (59) mayor -> . valor_numerico GREAT valor_numerico
    (60) mayor_igual -> . valor_numerico GREAT EQUAL valor_numerico
    (61) igual -> . valor_numerico EQUAL EQUAL valor_numerico
    (64) funcion_main -> . FN MAIN LPAREN RPAREN
    (65) funcion -> . FN ID LPAREN RPAREN
    (66) funcion -> . FN ID LPAREN lista_parametros RPAREN
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    ID              shift and go to state 11
    ENUM            shift and go to state 24
    PRINTLN         shift and go to state 25
    USE             shift and go to state 26
    LET             shift and go to state 27
    CONST           shift and go to state 28
    FN              shift and go to state 30
    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    cuerpo                         shift and go to state 1
    asignacion                     shift and go to state 2
    operaciones                    shift and go to state 3
    comparaciones                  shift and go to state 4
    definir_funcion                shift and go to state 5
    llamada_a_metodo               shift and go to state 6
    enum                           shift and go to state 7
    print                          shift and go to state 8
    library_call                   shift and go to state 9
    declaracion                    shift and go to state 10
    suma                           shift and go to state 13
    resta                          shift and go to state 14
    multiplicacion                 shift and go to state 15
    division                       shift and go to state 16
    menor                          shift and go to state 17
    menor_igual                    shift and go to state 18
    mayor                          shift and go to state 19
    mayor_igual                    shift and go to state 20
    igual                          shift and go to state 21
    funcion_main                   shift and go to state 22
    funcion                        shift and go to state 23
    valor_numerico                 shift and go to state 29

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> asignacion .

    $end            reduce using rule 1 (cuerpo -> asignacion .)


state 3

    (2) cuerpo -> operaciones .

    $end            reduce using rule 2 (cuerpo -> operaciones .)


state 4

    (3) cuerpo -> comparaciones .

    $end            reduce using rule 3 (cuerpo -> comparaciones .)


state 5

    (4) cuerpo -> definir_funcion .

    $end            reduce using rule 4 (cuerpo -> definir_funcion .)


state 6

    (5) cuerpo -> llamada_a_metodo .

    $end            reduce using rule 5 (cuerpo -> llamada_a_metodo .)


state 7

    (6) cuerpo -> enum .

    $end            reduce using rule 6 (cuerpo -> enum .)


state 8

    (7) cuerpo -> print .

    $end            reduce using rule 7 (cuerpo -> print .)


state 9

    (8) cuerpo -> library_call .

    $end            reduce using rule 8 (cuerpo -> library_call .)


state 10

    (11) asignacion -> declaracion . ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (12) asignacion -> declaracion . ID EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (13) asignacion -> declaracion . ID EQUAL VEC TURBO_FISH NEW LPAREN RPAREN
    (14) asignacion -> declaracion . ID EQUAL VEC MACRO LCORCH RCORCH
    (15) asignacion -> declaracion . ID EQUAL valor
    (16) asignacion -> declaracion . ID DOUBLE_POINT TIPO_INT EQUAL NUMBER
    (17) asignacion -> declaracion . ID DOUBLE_POINT TIPO_CHAR EQUAL CHAR
    (18) asignacion -> declaracion . ID DOUBLE_POINT TIPO_STRING EQUAL STRING
    (19) asignacion -> declaracion . ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN
    (20) asignacion -> declaracion . DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion
    (21) asignacion -> declaracion . ID EQUAL tupla_declaracion

    ID              shift and go to state 32
    DOUBLE_POINT    shift and go to state 33


state 11

    (69) llamada_a_metodo -> ID . PUNTO metodo
    (70) llamada_a_metodo -> ID . PUNTO NUMBER

    PUNTO           shift and go to state 34


state 12

    (40) valor_numerico -> NUMBER .

    PLUS            reduce using rule 40 (valor_numerico -> NUMBER .)
    MINUS           reduce using rule 40 (valor_numerico -> NUMBER .)
    TIMES           reduce using rule 40 (valor_numerico -> NUMBER .)
    DIVIDE          reduce using rule 40 (valor_numerico -> NUMBER .)
    LESS            reduce using rule 40 (valor_numerico -> NUMBER .)
    GREAT           reduce using rule 40 (valor_numerico -> NUMBER .)
    EQUAL           reduce using rule 40 (valor_numerico -> NUMBER .)
    $end            reduce using rule 40 (valor_numerico -> NUMBER .)
    RPAREN          reduce using rule 40 (valor_numerico -> NUMBER .)
    COMA            reduce using rule 40 (valor_numerico -> NUMBER .)
    RCORCH          reduce using rule 40 (valor_numerico -> NUMBER .)


state 13

    (41) operaciones -> suma .
    (46) suma -> suma . PLUS valor_numerico

    $end            reduce using rule 41 (operaciones -> suma .)
    PLUS            shift and go to state 35


state 14

    (42) operaciones -> resta .
    (48) resta -> resta . MINUS valor_numerico

    $end            reduce using rule 42 (operaciones -> resta .)
    MINUS           shift and go to state 36


state 15

    (43) operaciones -> multiplicacion .
    (50) multiplicacion -> multiplicacion . TIMES valor_numerico

    $end            reduce using rule 43 (operaciones -> multiplicacion .)
    TIMES           shift and go to state 37


state 16

    (44) operaciones -> division .

    $end            reduce using rule 44 (operaciones -> division .)


state 17

    (52) comparaciones -> menor .

    $end            reduce using rule 52 (comparaciones -> menor .)


state 18

    (53) comparaciones -> menor_igual .

    $end            reduce using rule 53 (comparaciones -> menor_igual .)


state 19

    (54) comparaciones -> mayor .

    $end            reduce using rule 54 (comparaciones -> mayor .)


state 20

    (55) comparaciones -> mayor_igual .

    $end            reduce using rule 55 (comparaciones -> mayor_igual .)


state 21

    (56) comparaciones -> igual .

    $end            reduce using rule 56 (comparaciones -> igual .)


state 22

    (62) definir_funcion -> funcion_main .

    $end            reduce using rule 62 (definir_funcion -> funcion_main .)


state 23

    (63) definir_funcion -> funcion .

    $end            reduce using rule 63 (definir_funcion -> funcion .)


state 24

    (77) enum -> ENUM . ID LLLAV lista_enum RLLAV

    ID              shift and go to state 38


state 25

    (93) print -> PRINTLN . MACRO LPAREN valor RPAREN
    (94) print -> PRINTLN . LPAREN valor RPAREN

    MACRO           shift and go to state 39
    LPAREN          shift and go to state 40


state 26

    (95) library_call -> USE . library_path
    (96) library_path -> . ID
    (97) library_path -> . ID TURBO_FISH library_path

    ID              shift and go to state 42

    library_path                   shift and go to state 41

state 27

    (23) declaracion -> LET .
    (24) declaracion -> LET . MUT

    ID              reduce using rule 23 (declaracion -> LET .)
    DOUBLE_POINT    reduce using rule 23 (declaracion -> LET .)
    MUT             shift and go to state 43


state 28

    (25) declaracion -> CONST .

    ID              reduce using rule 25 (declaracion -> CONST .)
    DOUBLE_POINT    reduce using rule 25 (declaracion -> CONST .)


state 29

    (45) suma -> valor_numerico . PLUS valor_numerico
    (47) resta -> valor_numerico . MINUS valor_numerico
    (49) multiplicacion -> valor_numerico . TIMES valor_numerico
    (51) division -> valor_numerico . DIVIDE valor_numerico
    (57) menor -> valor_numerico . LESS valor_numerico
    (58) menor_igual -> valor_numerico . LESS EQUAL valor_numerico
    (59) mayor -> valor_numerico . GREAT valor_numerico
    (60) mayor_igual -> valor_numerico . GREAT EQUAL valor_numerico
    (61) igual -> valor_numerico . EQUAL EQUAL valor_numerico

    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47
    LESS            shift and go to state 48
    GREAT           shift and go to state 50
    EQUAL           shift and go to state 49


state 30

    (64) funcion_main -> FN . MAIN LPAREN RPAREN
    (65) funcion -> FN . ID LPAREN RPAREN
    (66) funcion -> FN . ID LPAREN lista_parametros RPAREN

    MAIN            shift and go to state 51
    ID              shift and go to state 52


state 31

    (39) valor_numerico -> FLOAT .

    PLUS            reduce using rule 39 (valor_numerico -> FLOAT .)
    MINUS           reduce using rule 39 (valor_numerico -> FLOAT .)
    TIMES           reduce using rule 39 (valor_numerico -> FLOAT .)
    DIVIDE          reduce using rule 39 (valor_numerico -> FLOAT .)
    LESS            reduce using rule 39 (valor_numerico -> FLOAT .)
    GREAT           reduce using rule 39 (valor_numerico -> FLOAT .)
    EQUAL           reduce using rule 39 (valor_numerico -> FLOAT .)
    $end            reduce using rule 39 (valor_numerico -> FLOAT .)
    RPAREN          reduce using rule 39 (valor_numerico -> FLOAT .)
    COMA            reduce using rule 39 (valor_numerico -> FLOAT .)
    RCORCH          reduce using rule 39 (valor_numerico -> FLOAT .)


state 32

    (11) asignacion -> declaracion ID . DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (12) asignacion -> declaracion ID . EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (13) asignacion -> declaracion ID . EQUAL VEC TURBO_FISH NEW LPAREN RPAREN
    (14) asignacion -> declaracion ID . EQUAL VEC MACRO LCORCH RCORCH
    (15) asignacion -> declaracion ID . EQUAL valor
    (16) asignacion -> declaracion ID . DOUBLE_POINT TIPO_INT EQUAL NUMBER
    (17) asignacion -> declaracion ID . DOUBLE_POINT TIPO_CHAR EQUAL CHAR
    (18) asignacion -> declaracion ID . DOUBLE_POINT TIPO_STRING EQUAL STRING
    (19) asignacion -> declaracion ID . EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN
    (21) asignacion -> declaracion ID . EQUAL tupla_declaracion

    DOUBLE_POINT    shift and go to state 53
    EQUAL           shift and go to state 54


state 33

    (20) asignacion -> declaracion DOUBLE_POINT . tupla_asignacion EQUAL tupla_declaracion
    (22) tupla_asignacion -> . LPAREN tupla_lista_de_datos RPAREN

    LPAREN          shift and go to state 56

    tupla_asignacion               shift and go to state 55

state 34

    (69) llamada_a_metodo -> ID PUNTO . metodo
    (70) llamada_a_metodo -> ID PUNTO . NUMBER
    (71) metodo -> . pop_method
    (72) metodo -> . push_method
    (73) pop_method -> . POP LPAREN RPAREN
    (74) pop_method -> . POP LPAREN NUMBER RPAREN
    (75) push_method -> . PUSH LPAREN RPAREN
    (76) push_method -> . PUSH LPAREN NUMBER RPAREN

    NUMBER          shift and go to state 58
    POP             shift and go to state 61
    PUSH            shift and go to state 62

    metodo                         shift and go to state 57
    pop_method                     shift and go to state 59
    push_method                    shift and go to state 60

state 35

    (46) suma -> suma PLUS . valor_numerico
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor_numerico                 shift and go to state 63

state 36

    (48) resta -> resta MINUS . valor_numerico
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor_numerico                 shift and go to state 64

state 37

    (50) multiplicacion -> multiplicacion TIMES . valor_numerico
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor_numerico                 shift and go to state 65

state 38

    (77) enum -> ENUM ID . LLLAV lista_enum RLLAV

    LLLAV           shift and go to state 66


state 39

    (93) print -> PRINTLN MACRO . LPAREN valor RPAREN

    LPAREN          shift and go to state 67


state 40

    (94) print -> PRINTLN LPAREN . valor RPAREN
    (35) valor -> . valor_numerico
    (36) valor -> . STRING
    (37) valor -> . CHAR
    (38) valor -> . BOOL
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    STRING          shift and go to state 70
    CHAR            shift and go to state 71
    BOOL            shift and go to state 72
    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor                          shift and go to state 68
    valor_numerico                 shift and go to state 69

state 41

    (95) library_call -> USE library_path .

    $end            reduce using rule 95 (library_call -> USE library_path .)


state 42

    (96) library_path -> ID .
    (97) library_path -> ID . TURBO_FISH library_path

    $end            reduce using rule 96 (library_path -> ID .)
    TURBO_FISH      shift and go to state 73


state 43

    (24) declaracion -> LET MUT .

    ID              reduce using rule 24 (declaracion -> LET MUT .)
    DOUBLE_POINT    reduce using rule 24 (declaracion -> LET MUT .)


state 44

    (45) suma -> valor_numerico PLUS . valor_numerico
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor_numerico                 shift and go to state 74

state 45

    (47) resta -> valor_numerico MINUS . valor_numerico
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor_numerico                 shift and go to state 75

state 46

    (49) multiplicacion -> valor_numerico TIMES . valor_numerico
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor_numerico                 shift and go to state 76

state 47

    (51) division -> valor_numerico DIVIDE . valor_numerico
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor_numerico                 shift and go to state 77

state 48

    (57) menor -> valor_numerico LESS . valor_numerico
    (58) menor_igual -> valor_numerico LESS . EQUAL valor_numerico
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    EQUAL           shift and go to state 79
    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor_numerico                 shift and go to state 78

state 49

    (61) igual -> valor_numerico EQUAL . EQUAL valor_numerico

    EQUAL           shift and go to state 80


state 50

    (59) mayor -> valor_numerico GREAT . valor_numerico
    (60) mayor_igual -> valor_numerico GREAT . EQUAL valor_numerico
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    EQUAL           shift and go to state 82
    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor_numerico                 shift and go to state 81

state 51

    (64) funcion_main -> FN MAIN . LPAREN RPAREN

    LPAREN          shift and go to state 83


state 52

    (65) funcion -> FN ID . LPAREN RPAREN
    (66) funcion -> FN ID . LPAREN lista_parametros RPAREN

    LPAREN          shift and go to state 84


state 53

    (11) asignacion -> declaracion ID DOUBLE_POINT . VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (16) asignacion -> declaracion ID DOUBLE_POINT . TIPO_INT EQUAL NUMBER
    (17) asignacion -> declaracion ID DOUBLE_POINT . TIPO_CHAR EQUAL CHAR
    (18) asignacion -> declaracion ID DOUBLE_POINT . TIPO_STRING EQUAL STRING

    VEC_OBJ         shift and go to state 85
    TIPO_INT        shift and go to state 86
    TIPO_CHAR       shift and go to state 87
    TIPO_STRING     shift and go to state 88


state 54

    (12) asignacion -> declaracion ID EQUAL . VEC MACRO LCORCH tupla_valores RCORCH
    (13) asignacion -> declaracion ID EQUAL . VEC TURBO_FISH NEW LPAREN RPAREN
    (14) asignacion -> declaracion ID EQUAL . VEC MACRO LCORCH RCORCH
    (15) asignacion -> declaracion ID EQUAL . valor
    (19) asignacion -> declaracion ID EQUAL . tipo_de_dato TURBO_FISH NEW LPAREN RPAREN
    (21) asignacion -> declaracion ID EQUAL . tupla_declaracion
    (35) valor -> . valor_numerico
    (36) valor -> . STRING
    (37) valor -> . CHAR
    (38) valor -> . BOOL
    (31) tipo_de_dato -> . TIPO_STRING
    (32) tipo_de_dato -> . TIPO_BOOL
    (33) tipo_de_dato -> . TIPO_CHAR
    (34) tipo_de_dato -> . TIPO_INT
    (26) tupla_declaracion -> . LPAREN tupla_valores RPAREN
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    VEC             shift and go to state 89
    STRING          shift and go to state 70
    CHAR            shift and go to state 71
    BOOL            shift and go to state 72
    TIPO_STRING     shift and go to state 94
    TIPO_BOOL       shift and go to state 95
    TIPO_CHAR       shift and go to state 96
    TIPO_INT        shift and go to state 97
    LPAREN          shift and go to state 90
    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor                          shift and go to state 91
    tipo_de_dato                   shift and go to state 92
    tupla_declaracion              shift and go to state 93
    valor_numerico                 shift and go to state 69

state 55

    (20) asignacion -> declaracion DOUBLE_POINT tupla_asignacion . EQUAL tupla_declaracion

    EQUAL           shift and go to state 98


state 56

    (22) tupla_asignacion -> LPAREN . tupla_lista_de_datos RPAREN
    (27) tupla_lista_de_datos -> . tipo_de_dato
    (28) tupla_lista_de_datos -> . tipo_de_dato COMA tupla_lista_de_datos
    (31) tipo_de_dato -> . TIPO_STRING
    (32) tipo_de_dato -> . TIPO_BOOL
    (33) tipo_de_dato -> . TIPO_CHAR
    (34) tipo_de_dato -> . TIPO_INT

    TIPO_STRING     shift and go to state 94
    TIPO_BOOL       shift and go to state 95
    TIPO_CHAR       shift and go to state 96
    TIPO_INT        shift and go to state 97

    tupla_lista_de_datos           shift and go to state 99
    tipo_de_dato                   shift and go to state 100

state 57

    (69) llamada_a_metodo -> ID PUNTO metodo .

    $end            reduce using rule 69 (llamada_a_metodo -> ID PUNTO metodo .)


state 58

    (70) llamada_a_metodo -> ID PUNTO NUMBER .

    $end            reduce using rule 70 (llamada_a_metodo -> ID PUNTO NUMBER .)


state 59

    (71) metodo -> pop_method .

    $end            reduce using rule 71 (metodo -> pop_method .)


state 60

    (72) metodo -> push_method .

    $end            reduce using rule 72 (metodo -> push_method .)


state 61

    (73) pop_method -> POP . LPAREN RPAREN
    (74) pop_method -> POP . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 101


state 62

    (75) push_method -> PUSH . LPAREN RPAREN
    (76) push_method -> PUSH . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 102


state 63

    (46) suma -> suma PLUS valor_numerico .

    PLUS            reduce using rule 46 (suma -> suma PLUS valor_numerico .)
    $end            reduce using rule 46 (suma -> suma PLUS valor_numerico .)


state 64

    (48) resta -> resta MINUS valor_numerico .

    MINUS           reduce using rule 48 (resta -> resta MINUS valor_numerico .)
    $end            reduce using rule 48 (resta -> resta MINUS valor_numerico .)


state 65

    (50) multiplicacion -> multiplicacion TIMES valor_numerico .

    TIMES           reduce using rule 50 (multiplicacion -> multiplicacion TIMES valor_numerico .)
    $end            reduce using rule 50 (multiplicacion -> multiplicacion TIMES valor_numerico .)


state 66

    (77) enum -> ENUM ID LLLAV . lista_enum RLLAV
    (78) lista_enum -> . lista_enum_id
    (79) lista_enum -> . lista_enum_id_tipo
    (80) lista_enum -> . lista_enum_tipo
    (81) lista_enum_id -> . ID
    (82) lista_enum_id -> . ID COMA lista_enum_id
    (83) lista_enum_id_tipo -> . ID DOUBLE_POINT tipo_de_dato
    (84) lista_enum_id_tipo -> . ID DOUBLE_POINT tipo_de_dato lista_enum_id_tipo
    (85) lista_enum_tipo -> . tipo_de_dato
    (86) lista_enum_tipo -> . tipo_de_dato COMA lista_enum_tipo
    (31) tipo_de_dato -> . TIPO_STRING
    (32) tipo_de_dato -> . TIPO_BOOL
    (33) tipo_de_dato -> . TIPO_CHAR
    (34) tipo_de_dato -> . TIPO_INT

    ID              shift and go to state 103
    TIPO_STRING     shift and go to state 94
    TIPO_BOOL       shift and go to state 95
    TIPO_CHAR       shift and go to state 96
    TIPO_INT        shift and go to state 97

    lista_enum                     shift and go to state 104
    lista_enum_id                  shift and go to state 105
    lista_enum_id_tipo             shift and go to state 106
    lista_enum_tipo                shift and go to state 107
    tipo_de_dato                   shift and go to state 108

state 67

    (93) print -> PRINTLN MACRO LPAREN . valor RPAREN
    (35) valor -> . valor_numerico
    (36) valor -> . STRING
    (37) valor -> . CHAR
    (38) valor -> . BOOL
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    STRING          shift and go to state 70
    CHAR            shift and go to state 71
    BOOL            shift and go to state 72
    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor                          shift and go to state 109
    valor_numerico                 shift and go to state 69

state 68

    (94) print -> PRINTLN LPAREN valor . RPAREN

    RPAREN          shift and go to state 110


state 69

    (35) valor -> valor_numerico .

    RPAREN          reduce using rule 35 (valor -> valor_numerico .)
    $end            reduce using rule 35 (valor -> valor_numerico .)
    COMA            reduce using rule 35 (valor -> valor_numerico .)
    RCORCH          reduce using rule 35 (valor -> valor_numerico .)


state 70

    (36) valor -> STRING .

    RPAREN          reduce using rule 36 (valor -> STRING .)
    $end            reduce using rule 36 (valor -> STRING .)
    COMA            reduce using rule 36 (valor -> STRING .)
    RCORCH          reduce using rule 36 (valor -> STRING .)


state 71

    (37) valor -> CHAR .

    RPAREN          reduce using rule 37 (valor -> CHAR .)
    $end            reduce using rule 37 (valor -> CHAR .)
    COMA            reduce using rule 37 (valor -> CHAR .)
    RCORCH          reduce using rule 37 (valor -> CHAR .)


state 72

    (38) valor -> BOOL .

    RPAREN          reduce using rule 38 (valor -> BOOL .)
    $end            reduce using rule 38 (valor -> BOOL .)
    COMA            reduce using rule 38 (valor -> BOOL .)
    RCORCH          reduce using rule 38 (valor -> BOOL .)


state 73

    (97) library_path -> ID TURBO_FISH . library_path
    (96) library_path -> . ID
    (97) library_path -> . ID TURBO_FISH library_path

    ID              shift and go to state 42

    library_path                   shift and go to state 111

state 74

    (45) suma -> valor_numerico PLUS valor_numerico .

    PLUS            reduce using rule 45 (suma -> valor_numerico PLUS valor_numerico .)
    $end            reduce using rule 45 (suma -> valor_numerico PLUS valor_numerico .)


state 75

    (47) resta -> valor_numerico MINUS valor_numerico .

    MINUS           reduce using rule 47 (resta -> valor_numerico MINUS valor_numerico .)
    $end            reduce using rule 47 (resta -> valor_numerico MINUS valor_numerico .)


state 76

    (49) multiplicacion -> valor_numerico TIMES valor_numerico .

    TIMES           reduce using rule 49 (multiplicacion -> valor_numerico TIMES valor_numerico .)
    $end            reduce using rule 49 (multiplicacion -> valor_numerico TIMES valor_numerico .)


state 77

    (51) division -> valor_numerico DIVIDE valor_numerico .

    $end            reduce using rule 51 (division -> valor_numerico DIVIDE valor_numerico .)


state 78

    (57) menor -> valor_numerico LESS valor_numerico .

    $end            reduce using rule 57 (menor -> valor_numerico LESS valor_numerico .)


state 79

    (58) menor_igual -> valor_numerico LESS EQUAL . valor_numerico
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor_numerico                 shift and go to state 112

state 80

    (61) igual -> valor_numerico EQUAL EQUAL . valor_numerico
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor_numerico                 shift and go to state 113

state 81

    (59) mayor -> valor_numerico GREAT valor_numerico .

    $end            reduce using rule 59 (mayor -> valor_numerico GREAT valor_numerico .)


state 82

    (60) mayor_igual -> valor_numerico GREAT EQUAL . valor_numerico
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor_numerico                 shift and go to state 114

state 83

    (64) funcion_main -> FN MAIN LPAREN . RPAREN

    RPAREN          shift and go to state 115


state 84

    (65) funcion -> FN ID LPAREN . RPAREN
    (66) funcion -> FN ID LPAREN . lista_parametros RPAREN
    (67) lista_parametros -> . ID DOUBLE_POINT tipo_de_dato
    (68) lista_parametros -> . ID DOUBLE_POINT tipo_de_dato COMA lista_parametros

    RPAREN          shift and go to state 117
    ID              shift and go to state 116

    lista_parametros               shift and go to state 118

state 85

    (11) asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ . LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH

    LESS            shift and go to state 119


state 86

    (16) asignacion -> declaracion ID DOUBLE_POINT TIPO_INT . EQUAL NUMBER

    EQUAL           shift and go to state 120


state 87

    (17) asignacion -> declaracion ID DOUBLE_POINT TIPO_CHAR . EQUAL CHAR

    EQUAL           shift and go to state 121


state 88

    (18) asignacion -> declaracion ID DOUBLE_POINT TIPO_STRING . EQUAL STRING

    EQUAL           shift and go to state 122


state 89

    (12) asignacion -> declaracion ID EQUAL VEC . MACRO LCORCH tupla_valores RCORCH
    (13) asignacion -> declaracion ID EQUAL VEC . TURBO_FISH NEW LPAREN RPAREN
    (14) asignacion -> declaracion ID EQUAL VEC . MACRO LCORCH RCORCH

    MACRO           shift and go to state 123
    TURBO_FISH      shift and go to state 124


state 90

    (26) tupla_declaracion -> LPAREN . tupla_valores RPAREN
    (29) tupla_valores -> . valor
    (30) tupla_valores -> . valor COMA tupla_valores
    (35) valor -> . valor_numerico
    (36) valor -> . STRING
    (37) valor -> . CHAR
    (38) valor -> . BOOL
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    STRING          shift and go to state 70
    CHAR            shift and go to state 71
    BOOL            shift and go to state 72
    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    tupla_valores                  shift and go to state 125
    valor                          shift and go to state 126
    valor_numerico                 shift and go to state 69

state 91

    (15) asignacion -> declaracion ID EQUAL valor .

    $end            reduce using rule 15 (asignacion -> declaracion ID EQUAL valor .)


state 92

    (19) asignacion -> declaracion ID EQUAL tipo_de_dato . TURBO_FISH NEW LPAREN RPAREN

    TURBO_FISH      shift and go to state 127


state 93

    (21) asignacion -> declaracion ID EQUAL tupla_declaracion .

    $end            reduce using rule 21 (asignacion -> declaracion ID EQUAL tupla_declaracion .)


state 94

    (31) tipo_de_dato -> TIPO_STRING .

    TURBO_FISH      reduce using rule 31 (tipo_de_dato -> TIPO_STRING .)
    COMA            reduce using rule 31 (tipo_de_dato -> TIPO_STRING .)
    RPAREN          reduce using rule 31 (tipo_de_dato -> TIPO_STRING .)
    RLLAV           reduce using rule 31 (tipo_de_dato -> TIPO_STRING .)
    GREAT           reduce using rule 31 (tipo_de_dato -> TIPO_STRING .)
    ID              reduce using rule 31 (tipo_de_dato -> TIPO_STRING .)


state 95

    (32) tipo_de_dato -> TIPO_BOOL .

    TURBO_FISH      reduce using rule 32 (tipo_de_dato -> TIPO_BOOL .)
    COMA            reduce using rule 32 (tipo_de_dato -> TIPO_BOOL .)
    RPAREN          reduce using rule 32 (tipo_de_dato -> TIPO_BOOL .)
    RLLAV           reduce using rule 32 (tipo_de_dato -> TIPO_BOOL .)
    GREAT           reduce using rule 32 (tipo_de_dato -> TIPO_BOOL .)
    ID              reduce using rule 32 (tipo_de_dato -> TIPO_BOOL .)


state 96

    (33) tipo_de_dato -> TIPO_CHAR .

    TURBO_FISH      reduce using rule 33 (tipo_de_dato -> TIPO_CHAR .)
    COMA            reduce using rule 33 (tipo_de_dato -> TIPO_CHAR .)
    RPAREN          reduce using rule 33 (tipo_de_dato -> TIPO_CHAR .)
    RLLAV           reduce using rule 33 (tipo_de_dato -> TIPO_CHAR .)
    GREAT           reduce using rule 33 (tipo_de_dato -> TIPO_CHAR .)
    ID              reduce using rule 33 (tipo_de_dato -> TIPO_CHAR .)


state 97

    (34) tipo_de_dato -> TIPO_INT .

    TURBO_FISH      reduce using rule 34 (tipo_de_dato -> TIPO_INT .)
    COMA            reduce using rule 34 (tipo_de_dato -> TIPO_INT .)
    RPAREN          reduce using rule 34 (tipo_de_dato -> TIPO_INT .)
    RLLAV           reduce using rule 34 (tipo_de_dato -> TIPO_INT .)
    GREAT           reduce using rule 34 (tipo_de_dato -> TIPO_INT .)
    ID              reduce using rule 34 (tipo_de_dato -> TIPO_INT .)


state 98

    (20) asignacion -> declaracion DOUBLE_POINT tupla_asignacion EQUAL . tupla_declaracion
    (26) tupla_declaracion -> . LPAREN tupla_valores RPAREN

    LPAREN          shift and go to state 90

    tupla_declaracion              shift and go to state 128

state 99

    (22) tupla_asignacion -> LPAREN tupla_lista_de_datos . RPAREN

    RPAREN          shift and go to state 129


state 100

    (27) tupla_lista_de_datos -> tipo_de_dato .
    (28) tupla_lista_de_datos -> tipo_de_dato . COMA tupla_lista_de_datos

    RPAREN          reduce using rule 27 (tupla_lista_de_datos -> tipo_de_dato .)
    COMA            shift and go to state 130


state 101

    (73) pop_method -> POP LPAREN . RPAREN
    (74) pop_method -> POP LPAREN . NUMBER RPAREN

    RPAREN          shift and go to state 131
    NUMBER          shift and go to state 132


state 102

    (75) push_method -> PUSH LPAREN . RPAREN
    (76) push_method -> PUSH LPAREN . NUMBER RPAREN

    RPAREN          shift and go to state 133
    NUMBER          shift and go to state 134


state 103

    (81) lista_enum_id -> ID .
    (82) lista_enum_id -> ID . COMA lista_enum_id
    (83) lista_enum_id_tipo -> ID . DOUBLE_POINT tipo_de_dato
    (84) lista_enum_id_tipo -> ID . DOUBLE_POINT tipo_de_dato lista_enum_id_tipo

    RLLAV           reduce using rule 81 (lista_enum_id -> ID .)
    COMA            shift and go to state 135
    DOUBLE_POINT    shift and go to state 136


state 104

    (77) enum -> ENUM ID LLLAV lista_enum . RLLAV

    RLLAV           shift and go to state 137


state 105

    (78) lista_enum -> lista_enum_id .

    RLLAV           reduce using rule 78 (lista_enum -> lista_enum_id .)


state 106

    (79) lista_enum -> lista_enum_id_tipo .

    RLLAV           reduce using rule 79 (lista_enum -> lista_enum_id_tipo .)


state 107

    (80) lista_enum -> lista_enum_tipo .

    RLLAV           reduce using rule 80 (lista_enum -> lista_enum_tipo .)


state 108

    (85) lista_enum_tipo -> tipo_de_dato .
    (86) lista_enum_tipo -> tipo_de_dato . COMA lista_enum_tipo

    RLLAV           reduce using rule 85 (lista_enum_tipo -> tipo_de_dato .)
    COMA            shift and go to state 138


state 109

    (93) print -> PRINTLN MACRO LPAREN valor . RPAREN

    RPAREN          shift and go to state 139


state 110

    (94) print -> PRINTLN LPAREN valor RPAREN .

    $end            reduce using rule 94 (print -> PRINTLN LPAREN valor RPAREN .)


state 111

    (97) library_path -> ID TURBO_FISH library_path .

    $end            reduce using rule 97 (library_path -> ID TURBO_FISH library_path .)


state 112

    (58) menor_igual -> valor_numerico LESS EQUAL valor_numerico .

    $end            reduce using rule 58 (menor_igual -> valor_numerico LESS EQUAL valor_numerico .)


state 113

    (61) igual -> valor_numerico EQUAL EQUAL valor_numerico .

    $end            reduce using rule 61 (igual -> valor_numerico EQUAL EQUAL valor_numerico .)


state 114

    (60) mayor_igual -> valor_numerico GREAT EQUAL valor_numerico .

    $end            reduce using rule 60 (mayor_igual -> valor_numerico GREAT EQUAL valor_numerico .)


state 115

    (64) funcion_main -> FN MAIN LPAREN RPAREN .

    $end            reduce using rule 64 (funcion_main -> FN MAIN LPAREN RPAREN .)


state 116

    (67) lista_parametros -> ID . DOUBLE_POINT tipo_de_dato
    (68) lista_parametros -> ID . DOUBLE_POINT tipo_de_dato COMA lista_parametros

    DOUBLE_POINT    shift and go to state 140


state 117

    (65) funcion -> FN ID LPAREN RPAREN .

    $end            reduce using rule 65 (funcion -> FN ID LPAREN RPAREN .)


state 118

    (66) funcion -> FN ID LPAREN lista_parametros . RPAREN

    RPAREN          shift and go to state 141


state 119

    (11) asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ LESS . tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH
    (31) tipo_de_dato -> . TIPO_STRING
    (32) tipo_de_dato -> . TIPO_BOOL
    (33) tipo_de_dato -> . TIPO_CHAR
    (34) tipo_de_dato -> . TIPO_INT

    TIPO_STRING     shift and go to state 94
    TIPO_BOOL       shift and go to state 95
    TIPO_CHAR       shift and go to state 96
    TIPO_INT        shift and go to state 97

    tipo_de_dato                   shift and go to state 142

state 120

    (16) asignacion -> declaracion ID DOUBLE_POINT TIPO_INT EQUAL . NUMBER

    NUMBER          shift and go to state 143


state 121

    (17) asignacion -> declaracion ID DOUBLE_POINT TIPO_CHAR EQUAL . CHAR

    CHAR            shift and go to state 144


state 122

    (18) asignacion -> declaracion ID DOUBLE_POINT TIPO_STRING EQUAL . STRING

    STRING          shift and go to state 145


state 123

    (12) asignacion -> declaracion ID EQUAL VEC MACRO . LCORCH tupla_valores RCORCH
    (14) asignacion -> declaracion ID EQUAL VEC MACRO . LCORCH RCORCH

    LCORCH          shift and go to state 146


state 124

    (13) asignacion -> declaracion ID EQUAL VEC TURBO_FISH . NEW LPAREN RPAREN

    NEW             shift and go to state 147


state 125

    (26) tupla_declaracion -> LPAREN tupla_valores . RPAREN

    RPAREN          shift and go to state 148


state 126

    (29) tupla_valores -> valor .
    (30) tupla_valores -> valor . COMA tupla_valores

    RPAREN          reduce using rule 29 (tupla_valores -> valor .)
    RCORCH          reduce using rule 29 (tupla_valores -> valor .)
    COMA            shift and go to state 149


state 127

    (19) asignacion -> declaracion ID EQUAL tipo_de_dato TURBO_FISH . NEW LPAREN RPAREN

    NEW             shift and go to state 150


state 128

    (20) asignacion -> declaracion DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion .

    $end            reduce using rule 20 (asignacion -> declaracion DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion .)


state 129

    (22) tupla_asignacion -> LPAREN tupla_lista_de_datos RPAREN .

    EQUAL           reduce using rule 22 (tupla_asignacion -> LPAREN tupla_lista_de_datos RPAREN .)


state 130

    (28) tupla_lista_de_datos -> tipo_de_dato COMA . tupla_lista_de_datos
    (27) tupla_lista_de_datos -> . tipo_de_dato
    (28) tupla_lista_de_datos -> . tipo_de_dato COMA tupla_lista_de_datos
    (31) tipo_de_dato -> . TIPO_STRING
    (32) tipo_de_dato -> . TIPO_BOOL
    (33) tipo_de_dato -> . TIPO_CHAR
    (34) tipo_de_dato -> . TIPO_INT

    TIPO_STRING     shift and go to state 94
    TIPO_BOOL       shift and go to state 95
    TIPO_CHAR       shift and go to state 96
    TIPO_INT        shift and go to state 97

    tipo_de_dato                   shift and go to state 100
    tupla_lista_de_datos           shift and go to state 151

state 131

    (73) pop_method -> POP LPAREN RPAREN .

    $end            reduce using rule 73 (pop_method -> POP LPAREN RPAREN .)


state 132

    (74) pop_method -> POP LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 152


state 133

    (75) push_method -> PUSH LPAREN RPAREN .

    $end            reduce using rule 75 (push_method -> PUSH LPAREN RPAREN .)


state 134

    (76) push_method -> PUSH LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 153


state 135

    (82) lista_enum_id -> ID COMA . lista_enum_id
    (81) lista_enum_id -> . ID
    (82) lista_enum_id -> . ID COMA lista_enum_id

    ID              shift and go to state 154

    lista_enum_id                  shift and go to state 155

state 136

    (83) lista_enum_id_tipo -> ID DOUBLE_POINT . tipo_de_dato
    (84) lista_enum_id_tipo -> ID DOUBLE_POINT . tipo_de_dato lista_enum_id_tipo
    (31) tipo_de_dato -> . TIPO_STRING
    (32) tipo_de_dato -> . TIPO_BOOL
    (33) tipo_de_dato -> . TIPO_CHAR
    (34) tipo_de_dato -> . TIPO_INT

    TIPO_STRING     shift and go to state 94
    TIPO_BOOL       shift and go to state 95
    TIPO_CHAR       shift and go to state 96
    TIPO_INT        shift and go to state 97

    tipo_de_dato                   shift and go to state 156

state 137

    (77) enum -> ENUM ID LLLAV lista_enum RLLAV .

    $end            reduce using rule 77 (enum -> ENUM ID LLLAV lista_enum RLLAV .)


state 138

    (86) lista_enum_tipo -> tipo_de_dato COMA . lista_enum_tipo
    (85) lista_enum_tipo -> . tipo_de_dato
    (86) lista_enum_tipo -> . tipo_de_dato COMA lista_enum_tipo
    (31) tipo_de_dato -> . TIPO_STRING
    (32) tipo_de_dato -> . TIPO_BOOL
    (33) tipo_de_dato -> . TIPO_CHAR
    (34) tipo_de_dato -> . TIPO_INT

    TIPO_STRING     shift and go to state 94
    TIPO_BOOL       shift and go to state 95
    TIPO_CHAR       shift and go to state 96
    TIPO_INT        shift and go to state 97

    tipo_de_dato                   shift and go to state 108
    lista_enum_tipo                shift and go to state 157

state 139

    (93) print -> PRINTLN MACRO LPAREN valor RPAREN .

    $end            reduce using rule 93 (print -> PRINTLN MACRO LPAREN valor RPAREN .)


state 140

    (67) lista_parametros -> ID DOUBLE_POINT . tipo_de_dato
    (68) lista_parametros -> ID DOUBLE_POINT . tipo_de_dato COMA lista_parametros
    (31) tipo_de_dato -> . TIPO_STRING
    (32) tipo_de_dato -> . TIPO_BOOL
    (33) tipo_de_dato -> . TIPO_CHAR
    (34) tipo_de_dato -> . TIPO_INT

    TIPO_STRING     shift and go to state 94
    TIPO_BOOL       shift and go to state 95
    TIPO_CHAR       shift and go to state 96
    TIPO_INT        shift and go to state 97

    tipo_de_dato                   shift and go to state 158

state 141

    (66) funcion -> FN ID LPAREN lista_parametros RPAREN .

    $end            reduce using rule 66 (funcion -> FN ID LPAREN lista_parametros RPAREN .)


state 142

    (11) asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato . GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH

    GREAT           shift and go to state 159


state 143

    (16) asignacion -> declaracion ID DOUBLE_POINT TIPO_INT EQUAL NUMBER .

    $end            reduce using rule 16 (asignacion -> declaracion ID DOUBLE_POINT TIPO_INT EQUAL NUMBER .)


state 144

    (17) asignacion -> declaracion ID DOUBLE_POINT TIPO_CHAR EQUAL CHAR .

    $end            reduce using rule 17 (asignacion -> declaracion ID DOUBLE_POINT TIPO_CHAR EQUAL CHAR .)


state 145

    (18) asignacion -> declaracion ID DOUBLE_POINT TIPO_STRING EQUAL STRING .

    $end            reduce using rule 18 (asignacion -> declaracion ID DOUBLE_POINT TIPO_STRING EQUAL STRING .)


state 146

    (12) asignacion -> declaracion ID EQUAL VEC MACRO LCORCH . tupla_valores RCORCH
    (14) asignacion -> declaracion ID EQUAL VEC MACRO LCORCH . RCORCH
    (29) tupla_valores -> . valor
    (30) tupla_valores -> . valor COMA tupla_valores
    (35) valor -> . valor_numerico
    (36) valor -> . STRING
    (37) valor -> . CHAR
    (38) valor -> . BOOL
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    RCORCH          shift and go to state 161
    STRING          shift and go to state 70
    CHAR            shift and go to state 71
    BOOL            shift and go to state 72
    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    tupla_valores                  shift and go to state 160
    valor                          shift and go to state 126
    valor_numerico                 shift and go to state 69

state 147

    (13) asignacion -> declaracion ID EQUAL VEC TURBO_FISH NEW . LPAREN RPAREN

    LPAREN          shift and go to state 162


state 148

    (26) tupla_declaracion -> LPAREN tupla_valores RPAREN .

    $end            reduce using rule 26 (tupla_declaracion -> LPAREN tupla_valores RPAREN .)


state 149

    (30) tupla_valores -> valor COMA . tupla_valores
    (29) tupla_valores -> . valor
    (30) tupla_valores -> . valor COMA tupla_valores
    (35) valor -> . valor_numerico
    (36) valor -> . STRING
    (37) valor -> . CHAR
    (38) valor -> . BOOL
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    STRING          shift and go to state 70
    CHAR            shift and go to state 71
    BOOL            shift and go to state 72
    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    valor                          shift and go to state 126
    tupla_valores                  shift and go to state 163
    valor_numerico                 shift and go to state 69

state 150

    (19) asignacion -> declaracion ID EQUAL tipo_de_dato TURBO_FISH NEW . LPAREN RPAREN

    LPAREN          shift and go to state 164


state 151

    (28) tupla_lista_de_datos -> tipo_de_dato COMA tupla_lista_de_datos .

    RPAREN          reduce using rule 28 (tupla_lista_de_datos -> tipo_de_dato COMA tupla_lista_de_datos .)


state 152

    (74) pop_method -> POP LPAREN NUMBER RPAREN .

    $end            reduce using rule 74 (pop_method -> POP LPAREN NUMBER RPAREN .)


state 153

    (76) push_method -> PUSH LPAREN NUMBER RPAREN .

    $end            reduce using rule 76 (push_method -> PUSH LPAREN NUMBER RPAREN .)


state 154

    (81) lista_enum_id -> ID .
    (82) lista_enum_id -> ID . COMA lista_enum_id

    RLLAV           reduce using rule 81 (lista_enum_id -> ID .)
    COMA            shift and go to state 135


state 155

    (82) lista_enum_id -> ID COMA lista_enum_id .

    RLLAV           reduce using rule 82 (lista_enum_id -> ID COMA lista_enum_id .)


state 156

    (83) lista_enum_id_tipo -> ID DOUBLE_POINT tipo_de_dato .
    (84) lista_enum_id_tipo -> ID DOUBLE_POINT tipo_de_dato . lista_enum_id_tipo
    (83) lista_enum_id_tipo -> . ID DOUBLE_POINT tipo_de_dato
    (84) lista_enum_id_tipo -> . ID DOUBLE_POINT tipo_de_dato lista_enum_id_tipo

    RLLAV           reduce using rule 83 (lista_enum_id_tipo -> ID DOUBLE_POINT tipo_de_dato .)
    ID              shift and go to state 165

    lista_enum_id_tipo             shift and go to state 166

state 157

    (86) lista_enum_tipo -> tipo_de_dato COMA lista_enum_tipo .

    RLLAV           reduce using rule 86 (lista_enum_tipo -> tipo_de_dato COMA lista_enum_tipo .)


state 158

    (67) lista_parametros -> ID DOUBLE_POINT tipo_de_dato .
    (68) lista_parametros -> ID DOUBLE_POINT tipo_de_dato . COMA lista_parametros

    RPAREN          reduce using rule 67 (lista_parametros -> ID DOUBLE_POINT tipo_de_dato .)
    COMA            shift and go to state 167


state 159

    (11) asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT . EQUAL VEC MACRO LCORCH tupla_valores RCORCH

    EQUAL           shift and go to state 168


state 160

    (12) asignacion -> declaracion ID EQUAL VEC MACRO LCORCH tupla_valores . RCORCH

    RCORCH          shift and go to state 169


state 161

    (14) asignacion -> declaracion ID EQUAL VEC MACRO LCORCH RCORCH .

    $end            reduce using rule 14 (asignacion -> declaracion ID EQUAL VEC MACRO LCORCH RCORCH .)


state 162

    (13) asignacion -> declaracion ID EQUAL VEC TURBO_FISH NEW LPAREN . RPAREN

    RPAREN          shift and go to state 170


state 163

    (30) tupla_valores -> valor COMA tupla_valores .

    RPAREN          reduce using rule 30 (tupla_valores -> valor COMA tupla_valores .)
    RCORCH          reduce using rule 30 (tupla_valores -> valor COMA tupla_valores .)


state 164

    (19) asignacion -> declaracion ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN . RPAREN

    RPAREN          shift and go to state 171


state 165

    (83) lista_enum_id_tipo -> ID . DOUBLE_POINT tipo_de_dato
    (84) lista_enum_id_tipo -> ID . DOUBLE_POINT tipo_de_dato lista_enum_id_tipo

    DOUBLE_POINT    shift and go to state 136


state 166

    (84) lista_enum_id_tipo -> ID DOUBLE_POINT tipo_de_dato lista_enum_id_tipo .

    RLLAV           reduce using rule 84 (lista_enum_id_tipo -> ID DOUBLE_POINT tipo_de_dato lista_enum_id_tipo .)


state 167

    (68) lista_parametros -> ID DOUBLE_POINT tipo_de_dato COMA . lista_parametros
    (67) lista_parametros -> . ID DOUBLE_POINT tipo_de_dato
    (68) lista_parametros -> . ID DOUBLE_POINT tipo_de_dato COMA lista_parametros

    ID              shift and go to state 116

    lista_parametros               shift and go to state 172

state 168

    (11) asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL . VEC MACRO LCORCH tupla_valores RCORCH

    VEC             shift and go to state 173


state 169

    (12) asignacion -> declaracion ID EQUAL VEC MACRO LCORCH tupla_valores RCORCH .

    $end            reduce using rule 12 (asignacion -> declaracion ID EQUAL VEC MACRO LCORCH tupla_valores RCORCH .)


state 170

    (13) asignacion -> declaracion ID EQUAL VEC TURBO_FISH NEW LPAREN RPAREN .

    $end            reduce using rule 13 (asignacion -> declaracion ID EQUAL VEC TURBO_FISH NEW LPAREN RPAREN .)


state 171

    (19) asignacion -> declaracion ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN .

    $end            reduce using rule 19 (asignacion -> declaracion ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN .)


state 172

    (68) lista_parametros -> ID DOUBLE_POINT tipo_de_dato COMA lista_parametros .

    RPAREN          reduce using rule 68 (lista_parametros -> ID DOUBLE_POINT tipo_de_dato COMA lista_parametros .)


state 173

    (11) asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC . MACRO LCORCH tupla_valores RCORCH

    MACRO           shift and go to state 174


state 174

    (11) asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO . LCORCH tupla_valores RCORCH

    LCORCH          shift and go to state 175


state 175

    (11) asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH . tupla_valores RCORCH
    (29) tupla_valores -> . valor
    (30) tupla_valores -> . valor COMA tupla_valores
    (35) valor -> . valor_numerico
    (36) valor -> . STRING
    (37) valor -> . CHAR
    (38) valor -> . BOOL
    (39) valor_numerico -> . FLOAT
    (40) valor_numerico -> . NUMBER

    STRING          shift and go to state 70
    CHAR            shift and go to state 71
    BOOL            shift and go to state 72
    FLOAT           shift and go to state 31
    NUMBER          shift and go to state 12

    tupla_valores                  shift and go to state 176
    valor                          shift and go to state 126
    valor_numerico                 shift and go to state 69

state 176

    (11) asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores . RCORCH

    RCORCH          shift and go to state 177


state 177

    (11) asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH .

    $end            reduce using rule 11 (asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH .)

