
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASYN AWAY BOOL BREAK CHAR COMA CONST CONTINUE DIVIDE DOUBLE_POINT ELSE ENUM EQUAL FALSE FLOAT FN FOR FROM GREAT ID IF LCORCH LESS LET LLLAV LPAREN MACRO MAIN MINUS MUT NEW NOT NUMBER OR PLUS POP PRINTLN PUNTO PUNTO_COMA PUSH RCOM RCORCH RETURN RLLAV RPAREN STATIC STRING TIMES TIPO_BOOL TIPO_CHAR TIPO_INT TIPO_STRING TRUE TURBO_FISH USE VEC VEC_OBJ WHILEcuerpo : asignacion\n            | operaciones\n            | comparaciones\n            | definir_funcion\n            | llamada_a_metodo\n            | enum\n            | print\n            | library_callbooleano : TRUE\n                | FALSE\n    asignacion : declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH\n                | declaracion ID EQUAL VEC MACRO LCORCH tupla_valores RCORCH\n                | declaracion ID EQUAL VEC TURBO_FISH NEW LPAREN RPAREN\n                | declaracion ID EQUAL VEC MACRO LCORCH RCORCH\n                | declaracion ID EQUAL valor\n                | declaracion ID DOUBLE_POINT TIPO_INT EQUAL NUMBER\n                | declaracion ID DOUBLE_POINT TIPO_CHAR EQUAL CHAR\n                | declaracion ID DOUBLE_POINT TIPO_STRING EQUAL STRING\n                | declaracion ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN\n                | declaracion DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion\n                | declaracion ID EQUAL tupla_declaracion\n                tupla_asignacion : LPAREN tupla_lista_de_datos RPAREN\n  declaracion : LET \n                 | LET MUT\n                 | CONSTtupla_declaracion : LPAREN tupla_valores RPARENtupla_lista_de_datos : tipo_de_dato\n                          | tipo_de_dato COMA tupla_lista_de_datostupla_valores : valor\n                    | valor COMA tupla_valores tipo_de_dato : TIPO_STRING\n                  | TIPO_BOOL\n                  | TIPO_CHAR\n                  | TIPO_INTvalor  : valor_numerico\n            | STRING\n            | CHAR\n            | BOOLvalor_numerico : FLOAT\n                    | NUMBER operaciones : suma\n                  | resta\n                  | multiplicacion\n                  | division\n                   suma : valor_numerico PLUS valor_numerico\n          | suma PLUS valor_numerico resta : valor_numerico MINUS valor_numerico\n           | resta MINUS valor_numerico multiplicacion : valor_numerico TIMES valor_numerico\n                    | multiplicacion TIMES valor_numericodivision : valor_numerico DIVIDE valor_numericocomparaciones : menor\n                   | menor_igual\n                   | mayor\n                   | mayor_igual\n                   | igualmenor : valor_numerico LESS valor_numericomenor_igual : valor_numerico LESS EQUAL valor_numericomayor : valor_numerico GREAT valor_numericomayor_igual : valor_numerico GREAT EQUAL valor_numericoigual : valor_numerico EQUAL EQUAL valor_numericodefinir_funcion : funcion_main \n                      | funcionfuncion_main : FN MAIN LPAREN RPARENfuncion : FN ID LPAREN RPAREN\n             | FN ID LPAREN lista_parametros RPARENlista_parametros : ID DOUBLE_POINT tipo_de_dato\n                      | ID DOUBLE_POINT tipo_de_dato COMA lista_parametrosllamada_a_metodo : ID PUNTO metodo\n                      | ID PUNTO NUMBERmetodo : pop_method\n            | push_methodpop_method : POP LPAREN RPAREN\n                | POP LPAREN NUMBER RPARENpush_method : PUSH LPAREN RPAREN\n                | PUSH LPAREN NUMBER RPARENenum : ENUM ID LLLAV lista_enum RLLAVlista_enum : lista_enum_id\n                | lista_enum_id_tipo\n                | lista_enum_tipolista_enum_id : ID\n                   | ID COMA lista_enum_idlista_enum_id_tipo : ID DOUBLE_POINT tipo_de_dato\n                         | ID DOUBLE_POINT tipo_de_dato lista_enum_id_tipolista_enum_tipo : tipo_de_dato\n                     | tipo_de_dato COMA lista_enum_tipooperadorLogico : AND\n                      | OR\n                      | NOToperacionLogica : valor repite_operacionLogicarepite_operacionLogica : operadorLogico valor\n                              | operadorLogico valor repite_operacionLogicaprint  : PRINTLN MACRO LPAREN valor RPAREN\n            | PRINTLN LPAREN valor RPARENlibrary_call : USE library_pathlibrary_path : ID \n                  | ID TURBO_FISH library_path'
    
_lr_action_items = {'ID':([0,10,24,26,27,28,30,43,66,73,84,94,95,96,97,135,156,167,],[11,32,38,42,-23,-25,52,-24,103,42,116,-31,-32,-33,-34,154,165,116,]),'ENUM':([0,],[24,]),'PRINTLN':([0,],[25,]),'USE':([0,],[26,]),'LET':([0,],[27,]),'CONST':([0,],[28,]),'FN':([0,],[30,]),'FLOAT':([0,35,36,37,40,44,45,46,47,48,50,54,67,79,80,82,90,146,149,175,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'NUMBER':([0,34,35,36,37,40,44,45,46,47,48,50,54,67,79,80,82,90,101,102,120,146,149,175,],[12,58,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,132,134,143,12,12,12,]),'$end':([1,2,3,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,31,41,42,57,58,59,60,63,64,65,69,70,71,72,74,75,76,77,78,81,91,93,110,111,112,113,114,115,117,128,131,133,137,139,141,143,144,145,148,152,153,161,169,170,171,177,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-40,-41,-42,-43,-44,-52,-53,-54,-55,-56,-62,-63,-39,-95,-96,-69,-70,-71,-72,-46,-48,-50,-35,-36,-37,-38,-45,-47,-49,-51,-57,-59,-15,-21,-94,-97,-58,-61,-60,-64,-65,-20,-73,-75,-77,-93,-66,-16,-17,-18,-26,-74,-76,-14,-12,-13,-19,-11,]),'DOUBLE_POINT':([10,27,28,32,43,103,116,165,],[33,-23,-25,53,-24,136,140,136,]),'PUNTO':([11,],[34,]),'PLUS':([12,13,29,31,63,74,],[-40,35,44,-39,-46,-45,]),'MINUS':([12,14,29,31,64,75,],[-40,36,45,-39,-48,-47,]),'TIMES':([12,15,29,31,65,76,],[-40,37,46,-39,-50,-49,]),'DIVIDE':([12,29,31,],[-40,47,-39,]),'LESS':([12,29,31,85,],[-40,48,-39,119,]),'GREAT':([12,29,31,94,95,96,97,142,],[-40,50,-39,-31,-32,-33,-34,159,]),'EQUAL':([12,29,31,32,48,49,50,55,86,87,88,129,159,],[-40,49,-39,54,79,80,82,98,120,121,122,-22,168,]),'RPAREN':([12,31,68,69,70,71,72,83,84,94,95,96,97,99,100,101,102,109,118,125,126,132,134,151,158,162,163,164,172,],[-40,-39,110,-35,-36,-37,-38,115,117,-31,-32,-33,-34,129,-27,131,133,139,141,148,-29,152,153,-28,-67,170,-30,171,-68,]),'COMA':([12,31,69,70,71,72,94,95,96,97,100,103,108,126,154,158,],[-40,-39,-35,-36,-37,-38,-31,-32,-33,-34,130,135,138,149,135,167,]),'RCORCH':([12,31,69,70,71,72,126,146,160,163,176,],[-40,-39,-35,-36,-37,-38,-29,161,169,-30,177,]),'MACRO':([25,89,173,],[39,123,174,]),'LPAREN':([25,33,39,51,52,54,61,62,98,147,150,],[40,56,67,83,84,90,101,102,90,162,164,]),'MUT':([27,],[43,]),'MAIN':([30,],[51,]),'POP':([34,],[61,]),'PUSH':([34,],[62,]),'LLLAV':([38,],[66,]),'STRING':([40,54,67,90,122,146,149,175,],[70,70,70,70,145,70,70,70,]),'CHAR':([40,54,67,90,121,146,149,175,],[71,71,71,71,144,71,71,71,]),'BOOL':([40,54,67,90,146,149,175,],[72,72,72,72,72,72,72,]),'TURBO_FISH':([42,89,92,94,95,96,97,],[73,124,127,-31,-32,-33,-34,]),'VEC_OBJ':([53,],[85,]),'TIPO_INT':([53,54,56,66,119,130,136,138,140,],[86,97,97,97,97,97,97,97,97,]),'TIPO_CHAR':([53,54,56,66,119,130,136,138,140,],[87,96,96,96,96,96,96,96,96,]),'TIPO_STRING':([53,54,56,66,119,130,136,138,140,],[88,94,94,94,94,94,94,94,94,]),'VEC':([54,168,],[89,173,]),'TIPO_BOOL':([54,56,66,119,130,136,138,140,],[95,95,95,95,95,95,95,95,]),'RLLAV':([94,95,96,97,103,104,105,106,107,108,154,155,156,157,166,],[-31,-32,-33,-34,-81,137,-78,-79,-80,-85,-81,-82,-83,-86,-84,]),'LCORCH':([123,174,],[146,175,]),'NEW':([124,127,],[147,150,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,],[1,]),'asignacion':([0,],[2,]),'operaciones':([0,],[3,]),'comparaciones':([0,],[4,]),'definir_funcion':([0,],[5,]),'llamada_a_metodo':([0,],[6,]),'enum':([0,],[7,]),'print':([0,],[8,]),'library_call':([0,],[9,]),'declaracion':([0,],[10,]),'suma':([0,],[13,]),'resta':([0,],[14,]),'multiplicacion':([0,],[15,]),'division':([0,],[16,]),'menor':([0,],[17,]),'menor_igual':([0,],[18,]),'mayor':([0,],[19,]),'mayor_igual':([0,],[20,]),'igual':([0,],[21,]),'funcion_main':([0,],[22,]),'funcion':([0,],[23,]),'valor_numerico':([0,35,36,37,40,44,45,46,47,48,50,54,67,79,80,82,90,146,149,175,],[29,63,64,65,69,74,75,76,77,78,81,69,69,112,113,114,69,69,69,69,]),'library_path':([26,73,],[41,111,]),'tupla_asignacion':([33,],[55,]),'metodo':([34,],[57,]),'pop_method':([34,],[59,]),'push_method':([34,],[60,]),'valor':([40,54,67,90,146,149,175,],[68,91,109,126,126,126,126,]),'tipo_de_dato':([54,56,66,119,130,136,138,140,],[92,100,108,142,100,156,108,158,]),'tupla_declaracion':([54,98,],[93,128,]),'tupla_lista_de_datos':([56,130,],[99,151,]),'lista_enum':([66,],[104,]),'lista_enum_id':([66,135,],[105,155,]),'lista_enum_id_tipo':([66,156,],[106,166,]),'lista_enum_tipo':([66,138,],[107,157,]),'lista_parametros':([84,167,],[118,172,]),'tupla_valores':([90,146,149,175,],[125,160,163,176,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',5),
  ('cuerpo -> operaciones','cuerpo',1,'p_cuerpo','sintactico.py',6),
  ('cuerpo -> comparaciones','cuerpo',1,'p_cuerpo','sintactico.py',7),
  ('cuerpo -> definir_funcion','cuerpo',1,'p_cuerpo','sintactico.py',8),
  ('cuerpo -> llamada_a_metodo','cuerpo',1,'p_cuerpo','sintactico.py',9),
  ('cuerpo -> enum','cuerpo',1,'p_cuerpo','sintactico.py',10),
  ('cuerpo -> print','cuerpo',1,'p_cuerpo','sintactico.py',11),
  ('cuerpo -> library_call','cuerpo',1,'p_cuerpo','sintactico.py',12),
  ('booleano -> TRUE','booleano',1,'p_booleano','sintactico.py',16),
  ('booleano -> FALSE','booleano',1,'p_booleano','sintactico.py',17),
  ('asignacion -> declaracion ID DOUBLE_POINT VEC_OBJ LESS tipo_de_dato GREAT EQUAL VEC MACRO LCORCH tupla_valores RCORCH','asignacion',13,'p_asignacion','sintactico.py',23),
  ('asignacion -> declaracion ID EQUAL VEC MACRO LCORCH tupla_valores RCORCH','asignacion',8,'p_asignacion','sintactico.py',24),
  ('asignacion -> declaracion ID EQUAL VEC TURBO_FISH NEW LPAREN RPAREN','asignacion',8,'p_asignacion','sintactico.py',25),
  ('asignacion -> declaracion ID EQUAL VEC MACRO LCORCH RCORCH','asignacion',7,'p_asignacion','sintactico.py',26),
  ('asignacion -> declaracion ID EQUAL valor','asignacion',4,'p_asignacion','sintactico.py',27),
  ('asignacion -> declaracion ID DOUBLE_POINT TIPO_INT EQUAL NUMBER','asignacion',6,'p_asignacion','sintactico.py',28),
  ('asignacion -> declaracion ID DOUBLE_POINT TIPO_CHAR EQUAL CHAR','asignacion',6,'p_asignacion','sintactico.py',29),
  ('asignacion -> declaracion ID DOUBLE_POINT TIPO_STRING EQUAL STRING','asignacion',6,'p_asignacion','sintactico.py',30),
  ('asignacion -> declaracion ID EQUAL tipo_de_dato TURBO_FISH NEW LPAREN RPAREN','asignacion',8,'p_asignacion','sintactico.py',31),
  ('asignacion -> declaracion DOUBLE_POINT tupla_asignacion EQUAL tupla_declaracion','asignacion',5,'p_asignacion','sintactico.py',32),
  ('asignacion -> declaracion ID EQUAL tupla_declaracion','asignacion',4,'p_asignacion','sintactico.py',33),
  ('tupla_asignacion -> LPAREN tupla_lista_de_datos RPAREN','tupla_asignacion',3,'p_tupla_asignacion','sintactico.py',37),
  ('declaracion -> LET','declaracion',1,'p_declaracion','sintactico.py',41),
  ('declaracion -> LET MUT','declaracion',2,'p_declaracion','sintactico.py',42),
  ('declaracion -> CONST','declaracion',1,'p_declaracion','sintactico.py',43),
  ('tupla_declaracion -> LPAREN tupla_valores RPAREN','tupla_declaracion',3,'p_tupla_declaracion','sintactico.py',45),
  ('tupla_lista_de_datos -> tipo_de_dato','tupla_lista_de_datos',1,'p_tupla_lista_de_datos','sintactico.py',48),
  ('tupla_lista_de_datos -> tipo_de_dato COMA tupla_lista_de_datos','tupla_lista_de_datos',3,'p_tupla_lista_de_datos','sintactico.py',49),
  ('tupla_valores -> valor','tupla_valores',1,'p_tupla_valores','sintactico.py',52),
  ('tupla_valores -> valor COMA tupla_valores','tupla_valores',3,'p_tupla_valores','sintactico.py',53),
  ('tipo_de_dato -> TIPO_STRING','tipo_de_dato',1,'p_tipo_de_dato','sintactico.py',57),
  ('tipo_de_dato -> TIPO_BOOL','tipo_de_dato',1,'p_tipo_de_dato','sintactico.py',58),
  ('tipo_de_dato -> TIPO_CHAR','tipo_de_dato',1,'p_tipo_de_dato','sintactico.py',59),
  ('tipo_de_dato -> TIPO_INT','tipo_de_dato',1,'p_tipo_de_dato','sintactico.py',60),
  ('valor -> valor_numerico','valor',1,'p_valor','sintactico.py',63),
  ('valor -> STRING','valor',1,'p_valor','sintactico.py',64),
  ('valor -> CHAR','valor',1,'p_valor','sintactico.py',65),
  ('valor -> BOOL','valor',1,'p_valor','sintactico.py',66),
  ('valor_numerico -> FLOAT','valor_numerico',1,'p_valor_numerico','sintactico.py',69),
  ('valor_numerico -> NUMBER','valor_numerico',1,'p_valor_numerico','sintactico.py',70),
  ('operaciones -> suma','operaciones',1,'p_operaciones','sintactico.py',75),
  ('operaciones -> resta','operaciones',1,'p_operaciones','sintactico.py',76),
  ('operaciones -> multiplicacion','operaciones',1,'p_operaciones','sintactico.py',77),
  ('operaciones -> division','operaciones',1,'p_operaciones','sintactico.py',78),
  ('suma -> valor_numerico PLUS valor_numerico','suma',3,'p_suma','sintactico.py',82),
  ('suma -> suma PLUS valor_numerico','suma',3,'p_suma','sintactico.py',83),
  ('resta -> valor_numerico MINUS valor_numerico','resta',3,'p_resta','sintactico.py',86),
  ('resta -> resta MINUS valor_numerico','resta',3,'p_resta','sintactico.py',87),
  ('multiplicacion -> valor_numerico TIMES valor_numerico','multiplicacion',3,'p_multiplicacion','sintactico.py',90),
  ('multiplicacion -> multiplicacion TIMES valor_numerico','multiplicacion',3,'p_multiplicacion','sintactico.py',91),
  ('division -> valor_numerico DIVIDE valor_numerico','division',3,'p_division','sintactico.py',94),
  ('comparaciones -> menor','comparaciones',1,'p_comparaciones','sintactico.py',99),
  ('comparaciones -> menor_igual','comparaciones',1,'p_comparaciones','sintactico.py',100),
  ('comparaciones -> mayor','comparaciones',1,'p_comparaciones','sintactico.py',101),
  ('comparaciones -> mayor_igual','comparaciones',1,'p_comparaciones','sintactico.py',102),
  ('comparaciones -> igual','comparaciones',1,'p_comparaciones','sintactico.py',103),
  ('menor -> valor_numerico LESS valor_numerico','menor',3,'p_menor','sintactico.py',106),
  ('menor_igual -> valor_numerico LESS EQUAL valor_numerico','menor_igual',4,'p_menor_igual','sintactico.py',108),
  ('mayor -> valor_numerico GREAT valor_numerico','mayor',3,'p_mayor','sintactico.py',111),
  ('mayor_igual -> valor_numerico GREAT EQUAL valor_numerico','mayor_igual',4,'p_mayor_igual','sintactico.py',113),
  ('igual -> valor_numerico EQUAL EQUAL valor_numerico','igual',4,'p_igual','sintactico.py',116),
  ('definir_funcion -> funcion_main','definir_funcion',1,'p_definir_funcion','sintactico.py',120),
  ('definir_funcion -> funcion','definir_funcion',1,'p_definir_funcion','sintactico.py',121),
  ('funcion_main -> FN MAIN LPAREN RPAREN','funcion_main',4,'p_funcion_main','sintactico.py',124),
  ('funcion -> FN ID LPAREN RPAREN','funcion',4,'p_funcion','sintactico.py',127),
  ('funcion -> FN ID LPAREN lista_parametros RPAREN','funcion',5,'p_funcion','sintactico.py',128),
  ('lista_parametros -> ID DOUBLE_POINT tipo_de_dato','lista_parametros',3,'p_lista_parametros','sintactico.py',131),
  ('lista_parametros -> ID DOUBLE_POINT tipo_de_dato COMA lista_parametros','lista_parametros',5,'p_lista_parametros','sintactico.py',132),
  ('llamada_a_metodo -> ID PUNTO metodo','llamada_a_metodo',3,'p_llamada_a_metodo','sintactico.py',137),
  ('llamada_a_metodo -> ID PUNTO NUMBER','llamada_a_metodo',3,'p_llamada_a_metodo','sintactico.py',138),
  ('metodo -> pop_method','metodo',1,'p_metodo','sintactico.py',141),
  ('metodo -> push_method','metodo',1,'p_metodo','sintactico.py',142),
  ('pop_method -> POP LPAREN RPAREN','pop_method',3,'p_pop_method','sintactico.py',145),
  ('pop_method -> POP LPAREN NUMBER RPAREN','pop_method',4,'p_pop_method','sintactico.py',146),
  ('push_method -> PUSH LPAREN RPAREN','push_method',3,'p_push_method','sintactico.py',149),
  ('push_method -> PUSH LPAREN NUMBER RPAREN','push_method',4,'p_push_method','sintactico.py',150),
  ('enum -> ENUM ID LLLAV lista_enum RLLAV','enum',5,'p_enum','sintactico.py',154),
  ('lista_enum -> lista_enum_id','lista_enum',1,'p_lista_enum','sintactico.py',157),
  ('lista_enum -> lista_enum_id_tipo','lista_enum',1,'p_lista_enum','sintactico.py',158),
  ('lista_enum -> lista_enum_tipo','lista_enum',1,'p_lista_enum','sintactico.py',159),
  ('lista_enum_id -> ID','lista_enum_id',1,'p_lista_enum_id','sintactico.py',162),
  ('lista_enum_id -> ID COMA lista_enum_id','lista_enum_id',3,'p_lista_enum_id','sintactico.py',163),
  ('lista_enum_id_tipo -> ID DOUBLE_POINT tipo_de_dato','lista_enum_id_tipo',3,'p_lista_enum_id_tipo','sintactico.py',166),
  ('lista_enum_id_tipo -> ID DOUBLE_POINT tipo_de_dato lista_enum_id_tipo','lista_enum_id_tipo',4,'p_lista_enum_id_tipo','sintactico.py',167),
  ('lista_enum_tipo -> tipo_de_dato','lista_enum_tipo',1,'p_lista_enum_tipo','sintactico.py',170),
  ('lista_enum_tipo -> tipo_de_dato COMA lista_enum_tipo','lista_enum_tipo',3,'p_lista_enum_tipo','sintactico.py',171),
  ('operadorLogico -> AND','operadorLogico',1,'p_operadorLogico','sintactico.py',176),
  ('operadorLogico -> OR','operadorLogico',1,'p_operadorLogico','sintactico.py',177),
  ('operadorLogico -> NOT','operadorLogico',1,'p_operadorLogico','sintactico.py',178),
  ('operacionLogica -> valor repite_operacionLogica','operacionLogica',2,'p_operacionLogica','sintactico.py',181),
  ('repite_operacionLogica -> operadorLogico valor','repite_operacionLogica',2,'p_repite_operacionLogica','sintactico.py',185),
  ('repite_operacionLogica -> operadorLogico valor repite_operacionLogica','repite_operacionLogica',3,'p_repite_operacionLogica','sintactico.py',186),
  ('print -> PRINTLN MACRO LPAREN valor RPAREN','print',5,'p_print','sintactico.py',191),
  ('print -> PRINTLN LPAREN valor RPAREN','print',4,'p_print','sintactico.py',192),
  ('library_call -> USE library_path','library_call',2,'p_library_call','sintactico.py',195),
  ('library_path -> ID','library_path',1,'p_library_path','sintactico.py',198),
  ('library_path -> ID TURBO_FISH library_path','library_path',3,'p_library_path','sintactico.py',199),
]
